//
// Copyright 2019 AT&T Intellectual Property
// Copyright 2019 Nokia
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//  This source code is part of the near-RT RIC (RAN Intelligent Controller)
//  platform project (RICP).

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cell.proto

package entities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cell_Type int32

const (
	Cell_UNKNOWN_CELL Cell_Type = 0
	Cell_LTE_CELL     Cell_Type = 1
	Cell_NR_CELL      Cell_Type = 2
)

var Cell_Type_name = map[int32]string{
	0: "UNKNOWN_CELL",
	1: "LTE_CELL",
	2: "NR_CELL",
}

var Cell_Type_value = map[string]int32{
	"UNKNOWN_CELL": 0,
	"LTE_CELL":     1,
	"NR_CELL":      2,
}

func (x Cell_Type) String() string {
	return proto.EnumName(Cell_Type_name, int32(x))
}

func (Cell_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2698cf62ebc0420, []int{0, 0}
}

type Cell struct {
	Type Cell_Type `protobuf:"varint,1,opt,name=type,proto3,enum=entities.Cell_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Cell:
	//	*Cell_ServedCellInfo
	//	*Cell_ServedNrCell
	Cell                 isCell_Cell `protobuf_oneof:"cell"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Cell) Reset()         { *m = Cell{} }
func (m *Cell) String() string { return proto.CompactTextString(m) }
func (*Cell) ProtoMessage()    {}
func (*Cell) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2698cf62ebc0420, []int{0}
}

func (m *Cell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cell.Unmarshal(m, b)
}
func (m *Cell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cell.Marshal(b, m, deterministic)
}
func (m *Cell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cell.Merge(m, src)
}
func (m *Cell) XXX_Size() int {
	return xxx_messageInfo_Cell.Size(m)
}
func (m *Cell) XXX_DiscardUnknown() {
	xxx_messageInfo_Cell.DiscardUnknown(m)
}

var xxx_messageInfo_Cell proto.InternalMessageInfo

func (m *Cell) GetType() Cell_Type {
	if m != nil {
		return m.Type
	}
	return Cell_UNKNOWN_CELL
}

type isCell_Cell interface {
	isCell_Cell()
}

type Cell_ServedCellInfo struct {
	ServedCellInfo *ServedCellInfo `protobuf:"bytes,2,opt,name=served_cell_info,json=servedCellInfo,proto3,oneof"`
}

type Cell_ServedNrCell struct {
	ServedNrCell *ServedNRCell `protobuf:"bytes,3,opt,name=served_nr_cell,json=servedNrCell,proto3,oneof"`
}

func (*Cell_ServedCellInfo) isCell_Cell() {}

func (*Cell_ServedNrCell) isCell_Cell() {}

func (m *Cell) GetCell() isCell_Cell {
	if m != nil {
		return m.Cell
	}
	return nil
}

func (m *Cell) GetServedCellInfo() *ServedCellInfo {
	if x, ok := m.GetCell().(*Cell_ServedCellInfo); ok {
		return x.ServedCellInfo
	}
	return nil
}

func (m *Cell) GetServedNrCell() *ServedNRCell {
	if x, ok := m.GetCell().(*Cell_ServedNrCell); ok {
		return x.ServedNrCell
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Cell) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Cell_ServedCellInfo)(nil),
		(*Cell_ServedNrCell)(nil),
	}
}

func init() {
	proto.RegisterEnum("entities.Cell_Type", Cell_Type_name, Cell_Type_value)
	proto.RegisterType((*Cell)(nil), "entities.Cell")
}

func init() { proto.RegisterFile("cell.proto", fileDescriptor_d2698cf62ebc0420) }

var fileDescriptor_d2698cf62ebc0420 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4e, 0xcd, 0xc9,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0xcd, 0x2b, 0xc9, 0x2c, 0xc9, 0x4c, 0x2d,
	0x96, 0xe2, 0x4c, 0xcf, 0x4b, 0x82, 0x08, 0x4a, 0x71, 0xa6, 0xc2, 0x98, 0x4a, 0x9f, 0x18, 0xb9,
	0x58, 0x9c, 0x53, 0x73, 0x72, 0x84, 0xd4, 0xb9, 0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x25, 0x18, 0x15,
	0x18, 0x35, 0xf8, 0x8c, 0x84, 0xf5, 0x60, 0xfa, 0xf4, 0x40, 0xb2, 0x7a, 0x21, 0x95, 0x05, 0xa9,
	0x41, 0x60, 0x05, 0x42, 0x2e, 0x5c, 0x02, 0xc5, 0xa9, 0x45, 0x65, 0xa9, 0x29, 0xf1, 0x20, 0x6b,
	0xe2, 0x33, 0xf3, 0xd2, 0xf2, 0x25, 0x98, 0x14, 0x18, 0x35, 0xb8, 0x8d, 0x24, 0x10, 0x9a, 0x82,
	0xc1, 0x2a, 0x40, 0x5a, 0x3d, 0xf3, 0xd2, 0xf2, 0x3d, 0x18, 0x82, 0xf8, 0x8a, 0x51, 0x44, 0x84,
	0xec, 0xb8, 0xa0, 0x22, 0xf1, 0x79, 0x45, 0x60, 0x83, 0x24, 0x98, 0xc1, 0x66, 0x88, 0xa1, 0x9b,
	0xe1, 0x17, 0x04, 0xd2, 0xe3, 0xc1, 0x10, 0xc4, 0x03, 0x51, 0xef, 0x57, 0x04, 0xe2, 0x2b, 0x19,
	0x73, 0xb1, 0x80, 0xdc, 0x24, 0x24, 0xc0, 0xc5, 0x13, 0xea, 0xe7, 0xed, 0xe7, 0x1f, 0xee, 0x17,
	0xef, 0xec, 0xea, 0xe3, 0x23, 0xc0, 0x20, 0xc4, 0xc3, 0xc5, 0xe1, 0x13, 0xe2, 0x0a, 0xe1, 0x31,
	0x0a, 0x71, 0x73, 0xb1, 0xfb, 0x05, 0x41, 0x38, 0x4c, 0x4e, 0x6c, 0x5c, 0x2c, 0x20, 0xab, 0x92,
	0xd8, 0xc0, 0x7e, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x50, 0xb1, 0xc7, 0x12, 0x29, 0x01,
	0x00, 0x00,
}
