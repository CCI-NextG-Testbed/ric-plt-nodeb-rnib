//
// Copyright 2019 AT&T Intellectual Property
// Copyright 2019 Nokia
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: x2_setup_failure_response.proto

package entities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TypeOfError int32

const (
	TypeOfError_UNKNOWN_ERROR  TypeOfError = 0
	TypeOfError_NOT_UNDERSTOOD TypeOfError = 1
	TypeOfError_MISSING        TypeOfError = 2
)

var TypeOfError_name = map[int32]string{
	0: "UNKNOWN_ERROR",
	1: "NOT_UNDERSTOOD",
	2: "MISSING",
}

var TypeOfError_value = map[string]int32{
	"UNKNOWN_ERROR":  0,
	"NOT_UNDERSTOOD": 1,
	"MISSING":        2,
}

func (x TypeOfError) String() string {
	return proto.EnumName(TypeOfError_name, int32(x))
}

func (TypeOfError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{0}
}

type TimeToWait int32

const (
	TimeToWait_UNKNOWN_TIMEOUT TimeToWait = 0
	TimeToWait_V1S             TimeToWait = 1
	TimeToWait_V2S             TimeToWait = 2
	TimeToWait_V5S             TimeToWait = 3
	TimeToWait_V10S            TimeToWait = 4
	TimeToWait_V20S            TimeToWait = 5
	TimeToWait_V60S            TimeToWait = 6
)

var TimeToWait_name = map[int32]string{
	0: "UNKNOWN_TIMEOUT",
	1: "V1S",
	2: "V2S",
	3: "V5S",
	4: "V10S",
	5: "V20S",
	6: "V60S",
}

var TimeToWait_value = map[string]int32{
	"UNKNOWN_TIMEOUT": 0,
	"V1S":             1,
	"V2S":             2,
	"V5S":             3,
	"V10S":            4,
	"V20S":            5,
	"V60S":            6,
}

func (x TimeToWait) String() string {
	return proto.EnumName(TimeToWait_name, int32(x))
}

func (TimeToWait) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{1}
}

type TriggeringMessage int32

const (
	TriggeringMessage_UNKNOWN_MESSAGE      TriggeringMessage = 0
	TriggeringMessage_INITIATING_MESSAGE   TriggeringMessage = 1
	TriggeringMessage_SUCCESSFUL_OUTCOME   TriggeringMessage = 2
	TriggeringMessage_UNSUCCESSFUL_OUTCOME TriggeringMessage = 3
)

var TriggeringMessage_name = map[int32]string{
	0: "UNKNOWN_MESSAGE",
	1: "INITIATING_MESSAGE",
	2: "SUCCESSFUL_OUTCOME",
	3: "UNSUCCESSFUL_OUTCOME",
}

var TriggeringMessage_value = map[string]int32{
	"UNKNOWN_MESSAGE":      0,
	"INITIATING_MESSAGE":   1,
	"SUCCESSFUL_OUTCOME":   2,
	"UNSUCCESSFUL_OUTCOME": 3,
}

func (x TriggeringMessage) String() string {
	return proto.EnumName(TriggeringMessage_name, int32(x))
}

func (TriggeringMessage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{2}
}

type Criticality int32

const (
	Criticality_UNKNOWN_CRITICALITY Criticality = 0
	Criticality_REJECT              Criticality = 1
	Criticality_IGNORE              Criticality = 2
	Criticality_NOTIFY              Criticality = 3
)

var Criticality_name = map[int32]string{
	0: "UNKNOWN_CRITICALITY",
	1: "REJECT",
	2: "IGNORE",
	3: "NOTIFY",
}

var Criticality_value = map[string]int32{
	"UNKNOWN_CRITICALITY": 0,
	"REJECT":              1,
	"IGNORE":              2,
	"NOTIFY":              3,
}

func (x Criticality) String() string {
	return proto.EnumName(Criticality_name, int32(x))
}

func (Criticality) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{3}
}

type RadioNetworkLayer_Cause int32

const (
	RadioNetworkLayer_UNKNOWN                                                  RadioNetworkLayer_Cause = 0
	RadioNetworkLayer_HANDOVER_DESIRABLE_FOR_RADIO_REASONS                     RadioNetworkLayer_Cause = 1
	RadioNetworkLayer_TIME_CRITICAL_HANDOVER                                   RadioNetworkLayer_Cause = 2
	RadioNetworkLayer_RESOURCE_OPTIMISATION_HANDOVER                           RadioNetworkLayer_Cause = 3
	RadioNetworkLayer_REDUCE_LOAD_IN_SERVING_CELL                              RadioNetworkLayer_Cause = 4
	RadioNetworkLayer_PARTIAL_HANDOVER                                         RadioNetworkLayer_Cause = 5
	RadioNetworkLayer_UNKNOWN_NEW_ENB_UE_X2AP_ID                               RadioNetworkLayer_Cause = 6
	RadioNetworkLayer_UNKNOWN_OLD_ENBME_UE_X2AP_ID                             RadioNetworkLayer_Cause = 7
	RadioNetworkLayer_UNKNOWN_PAIR_OF_UE_X2AP_ID                               RadioNetworkLayer_Cause = 8
	RadioNetworkLayer_HO_TARGET_NOT_ALLOWED                                    RadioNetworkLayer_Cause = 9
	RadioNetworkLayer_TX2_RELOC_OVERALL_EXPIRY                                 RadioNetworkLayer_Cause = 10
	RadioNetworkLayer_T_RELOC_PREP_EXPIRY                                      RadioNetworkLayer_Cause = 11
	RadioNetworkLayer_CELL_NOT_AVAILABLE                                       RadioNetworkLayer_Cause = 12
	RadioNetworkLayer_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL              RadioNetworkLayer_Cause = 13
	RadioNetworkLayer_INVALID_MME_GROUP_ID                                     RadioNetworkLayer_Cause = 14
	RadioNetworkLayer_UNKNOWN_MME_CODE                                         RadioNetworkLayer_Cause = 15
	RadioNetworkLayer_ENCRYPTION_INTEGRITY_PROTECTION_ALGORITHMS_NOT_SUPPORTED RadioNetworkLayer_Cause = 16
	RadioNetworkLayer_REPORT_CHARACTERISTICS_EMPTY                             RadioNetworkLayer_Cause = 17
	RadioNetworkLayer_NO_REPORT_PERIODICITY                                    RadioNetworkLayer_Cause = 18
	RadioNetworkLayer_EXISTING_MEASUREMENT_ID                                  RadioNetworkLayer_Cause = 19
	RadioNetworkLayer_UNKNOWN_ENB_MEASUREMENT_ID                               RadioNetworkLayer_Cause = 20
	RadioNetworkLayer_MEASUREMENT_TEMPORARILY_NOT_AVAILABLE                    RadioNetworkLayer_Cause = 21
	RadioNetworkLayer_UNSPECIFIED                                              RadioNetworkLayer_Cause = 22
	RadioNetworkLayer_LOAD_BALANCING                                           RadioNetworkLayer_Cause = 23
	RadioNetworkLayer_HANDOVER_OPTIMISATION                                    RadioNetworkLayer_Cause = 24
	RadioNetworkLayer_VALUE_OUT_OF_ALLOWED_RANGE                               RadioNetworkLayer_Cause = 25
	RadioNetworkLayer_MULTIPLE_E_RAB_ID_INSTANCES                              RadioNetworkLayer_Cause = 26
	RadioNetworkLayer_SWITCH_OFF_ONGOING                                       RadioNetworkLayer_Cause = 27
	RadioNetworkLayer_NOT_SUPPORTED_QCI_VALUE                                  RadioNetworkLayer_Cause = 28
	RadioNetworkLayer_MEASUREMENT_NOT_SUPPORTED_FOR_THE_OBJECT                 RadioNetworkLayer_Cause = 29
	RadioNetworkLayer_TDC_OVERALL_EXPIRY                                       RadioNetworkLayer_Cause = 30
	RadioNetworkLayer_TDC_PREP_EXPIRY                                          RadioNetworkLayer_Cause = 31
	RadioNetworkLayer_ACTION_DESIRABLE_FOR_RADIO_REASONS                       RadioNetworkLayer_Cause = 32
	RadioNetworkLayer_REDUCE_LOAD                                              RadioNetworkLayer_Cause = 33
	RadioNetworkLayer_RESOURCE_OPTIMISATION                                    RadioNetworkLayer_Cause = 34
	RadioNetworkLayer_TIME_CRITICAL_ACTION                                     RadioNetworkLayer_Cause = 35
	RadioNetworkLayer_TARGET_NOT_ALLOWED                                       RadioNetworkLayer_Cause = 36
	RadioNetworkLayer_NO_RADIO_RESOURCES_AVAILABLE                             RadioNetworkLayer_Cause = 37
	RadioNetworkLayer_INVALID_QOS_COMBINATION                                  RadioNetworkLayer_Cause = 38
	RadioNetworkLayer_ENCRYPTION_ALGORITHMS_NOT_SUPPORTED                      RadioNetworkLayer_Cause = 39
	RadioNetworkLayer_PROCEDURE_CANCELLED                                      RadioNetworkLayer_Cause = 40
	RadioNetworkLayer_RRM_PURPOSE                                              RadioNetworkLayer_Cause = 41
	RadioNetworkLayer_IMPROVE_USER_BIT_RATE                                    RadioNetworkLayer_Cause = 42
	RadioNetworkLayer_USER_INACTIVITY                                          RadioNetworkLayer_Cause = 43
	RadioNetworkLayer_RADIO_CONNECTION_WITH_UE_LOST                            RadioNetworkLayer_Cause = 44
	RadioNetworkLayer_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE                 RadioNetworkLayer_Cause = 45
	RadioNetworkLayer_BEARER_OPTION_NOT_SUPPORTED                              RadioNetworkLayer_Cause = 46
	RadioNetworkLayer_MCG_MOBILITY                                             RadioNetworkLayer_Cause = 47
	RadioNetworkLayer_SCG_MOBILITY                                             RadioNetworkLayer_Cause = 48
	RadioNetworkLayer_COUNT_REACHES_MAX_VALUE                                  RadioNetworkLayer_Cause = 49
	RadioNetworkLayer_UNKNOWN_OLD_EN_GNB_UE_X2AP_ID                            RadioNetworkLayer_Cause = 50
	RadioNetworkLayer_PDCP_OVERLOAD                                            RadioNetworkLayer_Cause = 51
)

var RadioNetworkLayer_Cause_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "HANDOVER_DESIRABLE_FOR_RADIO_REASONS",
	2:  "TIME_CRITICAL_HANDOVER",
	3:  "RESOURCE_OPTIMISATION_HANDOVER",
	4:  "REDUCE_LOAD_IN_SERVING_CELL",
	5:  "PARTIAL_HANDOVER",
	6:  "UNKNOWN_NEW_ENB_UE_X2AP_ID",
	7:  "UNKNOWN_OLD_ENBME_UE_X2AP_ID",
	8:  "UNKNOWN_PAIR_OF_UE_X2AP_ID",
	9:  "HO_TARGET_NOT_ALLOWED",
	10: "TX2_RELOC_OVERALL_EXPIRY",
	11: "T_RELOC_PREP_EXPIRY",
	12: "CELL_NOT_AVAILABLE",
	13: "NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL",
	14: "INVALID_MME_GROUP_ID",
	15: "UNKNOWN_MME_CODE",
	16: "ENCRYPTION_INTEGRITY_PROTECTION_ALGORITHMS_NOT_SUPPORTED",
	17: "REPORT_CHARACTERISTICS_EMPTY",
	18: "NO_REPORT_PERIODICITY",
	19: "EXISTING_MEASUREMENT_ID",
	20: "UNKNOWN_ENB_MEASUREMENT_ID",
	21: "MEASUREMENT_TEMPORARILY_NOT_AVAILABLE",
	22: "UNSPECIFIED",
	23: "LOAD_BALANCING",
	24: "HANDOVER_OPTIMISATION",
	25: "VALUE_OUT_OF_ALLOWED_RANGE",
	26: "MULTIPLE_E_RAB_ID_INSTANCES",
	27: "SWITCH_OFF_ONGOING",
	28: "NOT_SUPPORTED_QCI_VALUE",
	29: "MEASUREMENT_NOT_SUPPORTED_FOR_THE_OBJECT",
	30: "TDC_OVERALL_EXPIRY",
	31: "TDC_PREP_EXPIRY",
	32: "ACTION_DESIRABLE_FOR_RADIO_REASONS",
	33: "REDUCE_LOAD",
	34: "RESOURCE_OPTIMISATION",
	35: "TIME_CRITICAL_ACTION",
	36: "TARGET_NOT_ALLOWED",
	37: "NO_RADIO_RESOURCES_AVAILABLE",
	38: "INVALID_QOS_COMBINATION",
	39: "ENCRYPTION_ALGORITHMS_NOT_SUPPORTED",
	40: "PROCEDURE_CANCELLED",
	41: "RRM_PURPOSE",
	42: "IMPROVE_USER_BIT_RATE",
	43: "USER_INACTIVITY",
	44: "RADIO_CONNECTION_WITH_UE_LOST",
	45: "FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE",
	46: "BEARER_OPTION_NOT_SUPPORTED",
	47: "MCG_MOBILITY",
	48: "SCG_MOBILITY",
	49: "COUNT_REACHES_MAX_VALUE",
	50: "UNKNOWN_OLD_EN_GNB_UE_X2AP_ID",
	51: "PDCP_OVERLOAD",
}

var RadioNetworkLayer_Cause_value = map[string]int32{
	"UNKNOWN":                                                  0,
	"HANDOVER_DESIRABLE_FOR_RADIO_REASONS":                     1,
	"TIME_CRITICAL_HANDOVER":                                   2,
	"RESOURCE_OPTIMISATION_HANDOVER":                           3,
	"REDUCE_LOAD_IN_SERVING_CELL":                              4,
	"PARTIAL_HANDOVER":                                         5,
	"UNKNOWN_NEW_ENB_UE_X2AP_ID":                               6,
	"UNKNOWN_OLD_ENBME_UE_X2AP_ID":                             7,
	"UNKNOWN_PAIR_OF_UE_X2AP_ID":                               8,
	"HO_TARGET_NOT_ALLOWED":                                    9,
	"TX2_RELOC_OVERALL_EXPIRY":                                 10,
	"T_RELOC_PREP_EXPIRY":                                      11,
	"CELL_NOT_AVAILABLE":                                       12,
	"NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL":              13,
	"INVALID_MME_GROUP_ID":                                     14,
	"UNKNOWN_MME_CODE":                                         15,
	"ENCRYPTION_INTEGRITY_PROTECTION_ALGORITHMS_NOT_SUPPORTED": 16,
	"REPORT_CHARACTERISTICS_EMPTY":                             17,
	"NO_REPORT_PERIODICITY":                                    18,
	"EXISTING_MEASUREMENT_ID":                                  19,
	"UNKNOWN_ENB_MEASUREMENT_ID":                               20,
	"MEASUREMENT_TEMPORARILY_NOT_AVAILABLE":                    21,
	"UNSPECIFIED":                                              22,
	"LOAD_BALANCING":                                           23,
	"HANDOVER_OPTIMISATION":                                    24,
	"VALUE_OUT_OF_ALLOWED_RANGE":                               25,
	"MULTIPLE_E_RAB_ID_INSTANCES":                              26,
	"SWITCH_OFF_ONGOING":                                       27,
	"NOT_SUPPORTED_QCI_VALUE":                                  28,
	"MEASUREMENT_NOT_SUPPORTED_FOR_THE_OBJECT":                 29,
	"TDC_OVERALL_EXPIRY":                                       30,
	"TDC_PREP_EXPIRY":                                          31,
	"ACTION_DESIRABLE_FOR_RADIO_REASONS":                       32,
	"REDUCE_LOAD":                                              33,
	"RESOURCE_OPTIMISATION":                                    34,
	"TIME_CRITICAL_ACTION":                                     35,
	"TARGET_NOT_ALLOWED":                                       36,
	"NO_RADIO_RESOURCES_AVAILABLE":                             37,
	"INVALID_QOS_COMBINATION":                                  38,
	"ENCRYPTION_ALGORITHMS_NOT_SUPPORTED":                      39,
	"PROCEDURE_CANCELLED":                                      40,
	"RRM_PURPOSE":                                              41,
	"IMPROVE_USER_BIT_RATE":                                    42,
	"USER_INACTIVITY":                                          43,
	"RADIO_CONNECTION_WITH_UE_LOST":                            44,
	"FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE":                 45,
	"BEARER_OPTION_NOT_SUPPORTED":                              46,
	"MCG_MOBILITY":                                             47,
	"SCG_MOBILITY":                                             48,
	"COUNT_REACHES_MAX_VALUE":                                  49,
	"UNKNOWN_OLD_EN_GNB_UE_X2AP_ID":                            50,
	"PDCP_OVERLOAD":                                            51,
}

func (x RadioNetworkLayer_Cause) String() string {
	return proto.EnumName(RadioNetworkLayer_Cause_name, int32(x))
}

func (RadioNetworkLayer_Cause) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{1, 0}
}

type TransportLayer_Cause int32

const (
	TransportLayer_UNKNOWN                        TransportLayer_Cause = 0
	TransportLayer_TRANSPORT_RESOURCE_UNAVAILABLE TransportLayer_Cause = 1
	TransportLayer_UNSPECIFIED                    TransportLayer_Cause = 2
)

var TransportLayer_Cause_name = map[int32]string{
	0: "UNKNOWN",
	1: "TRANSPORT_RESOURCE_UNAVAILABLE",
	2: "UNSPECIFIED",
}

var TransportLayer_Cause_value = map[string]int32{
	"UNKNOWN":                        0,
	"TRANSPORT_RESOURCE_UNAVAILABLE": 1,
	"UNSPECIFIED":                    2,
}

func (x TransportLayer_Cause) String() string {
	return proto.EnumName(TransportLayer_Cause_name, int32(x))
}

func (TransportLayer_Cause) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{2, 0}
}

type Protocol_Cause int32

const (
	Protocol_UNKNOWN                                           Protocol_Cause = 0
	Protocol_TRANSFER_SYNTAX_ERROR                             Protocol_Cause = 1
	Protocol_ABSTRACT_SYNTAX_ERROR_REJECT                      Protocol_Cause = 2
	Protocol_ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY           Protocol_Cause = 3
	Protocol_MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE        Protocol_Cause = 4
	Protocol_SEMANTIC_ERROR                                    Protocol_Cause = 5
	Protocol_UNSPECIFIED                                       Protocol_Cause = 6
	Protocol_ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE Protocol_Cause = 7
)

var Protocol_Cause_name = map[int32]string{
	0: "UNKNOWN",
	1: "TRANSFER_SYNTAX_ERROR",
	2: "ABSTRACT_SYNTAX_ERROR_REJECT",
	3: "ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY",
	4: "MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE",
	5: "SEMANTIC_ERROR",
	6: "UNSPECIFIED",
	7: "ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE",
}

var Protocol_Cause_value = map[string]int32{
	"UNKNOWN":                                           0,
	"TRANSFER_SYNTAX_ERROR":                             1,
	"ABSTRACT_SYNTAX_ERROR_REJECT":                      2,
	"ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY":           3,
	"MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE":        4,
	"SEMANTIC_ERROR":                                    5,
	"UNSPECIFIED":                                       6,
	"ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE": 7,
}

func (x Protocol_Cause) String() string {
	return proto.EnumName(Protocol_Cause_name, int32(x))
}

func (Protocol_Cause) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{3, 0}
}

type Miscellaneous_Cause int32

const (
	Miscellaneous_UNKNOWN                                    Miscellaneous_Cause = 0
	Miscellaneous_CONTROL_PROCESSING_OVERLOAD                Miscellaneous_Cause = 1
	Miscellaneous_HARDWARE_FAILURE                           Miscellaneous_Cause = 2
	Miscellaneous_OM_INTERVENTION                            Miscellaneous_Cause = 3
	Miscellaneous_NOT_ENOUGH_USER_PLANE_PROCESSING_RESOURCES Miscellaneous_Cause = 4
	Miscellaneous_UNSPECIFIED                                Miscellaneous_Cause = 5
)

var Miscellaneous_Cause_name = map[int32]string{
	0: "UNKNOWN",
	1: "CONTROL_PROCESSING_OVERLOAD",
	2: "HARDWARE_FAILURE",
	3: "OM_INTERVENTION",
	4: "NOT_ENOUGH_USER_PLANE_PROCESSING_RESOURCES",
	5: "UNSPECIFIED",
}

var Miscellaneous_Cause_value = map[string]int32{
	"UNKNOWN":                     0,
	"CONTROL_PROCESSING_OVERLOAD": 1,
	"HARDWARE_FAILURE":            2,
	"OM_INTERVENTION":             3,
	"NOT_ENOUGH_USER_PLANE_PROCESSING_RESOURCES": 4,
	"UNSPECIFIED": 5,
}

func (x Miscellaneous_Cause) String() string {
	return proto.EnumName(Miscellaneous_Cause_name, int32(x))
}

func (Miscellaneous_Cause) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{4, 0}
}

type SetupFailure struct {
	// Types that are valid to be assigned to CauseGroup:
	//	*SetupFailure_NetworkLayerCause
	//	*SetupFailure_TransportLayerCause
	//	*SetupFailure_ProtocolCause
	//	*SetupFailure_MiscellaneousCause
	CauseGroup             isSetupFailure_CauseGroup `protobuf_oneof:"cause_group"`
	TimeToWait             TimeToWait                `protobuf:"varint,5,opt,name=time_to_wait,json=timeToWait,proto3,enum=entities.TimeToWait" json:"time_to_wait,omitempty"`
	CriticalityDiagnostics *CriticalityDiagnostics   `protobuf:"bytes,6,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3" json:"criticality_diagnostics,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *SetupFailure) Reset()         { *m = SetupFailure{} }
func (m *SetupFailure) String() string { return proto.CompactTextString(m) }
func (*SetupFailure) ProtoMessage()    {}
func (*SetupFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{0}
}

func (m *SetupFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupFailure.Unmarshal(m, b)
}
func (m *SetupFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupFailure.Marshal(b, m, deterministic)
}
func (m *SetupFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupFailure.Merge(m, src)
}
func (m *SetupFailure) XXX_Size() int {
	return xxx_messageInfo_SetupFailure.Size(m)
}
func (m *SetupFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupFailure.DiscardUnknown(m)
}

var xxx_messageInfo_SetupFailure proto.InternalMessageInfo

type isSetupFailure_CauseGroup interface {
	isSetupFailure_CauseGroup()
}

type SetupFailure_NetworkLayerCause struct {
	NetworkLayerCause RadioNetworkLayer_Cause `protobuf:"varint,1,opt,name=network_layer_cause,json=networkLayerCause,proto3,enum=entities.RadioNetworkLayer_Cause,oneof"`
}

type SetupFailure_TransportLayerCause struct {
	TransportLayerCause TransportLayer_Cause `protobuf:"varint,2,opt,name=transport_layer_cause,json=transportLayerCause,proto3,enum=entities.TransportLayer_Cause,oneof"`
}

type SetupFailure_ProtocolCause struct {
	ProtocolCause Protocol_Cause `protobuf:"varint,3,opt,name=protocol_cause,json=protocolCause,proto3,enum=entities.Protocol_Cause,oneof"`
}

type SetupFailure_MiscellaneousCause struct {
	MiscellaneousCause Miscellaneous_Cause `protobuf:"varint,4,opt,name=miscellaneous_cause,json=miscellaneousCause,proto3,enum=entities.Miscellaneous_Cause,oneof"`
}

func (*SetupFailure_NetworkLayerCause) isSetupFailure_CauseGroup() {}

func (*SetupFailure_TransportLayerCause) isSetupFailure_CauseGroup() {}

func (*SetupFailure_ProtocolCause) isSetupFailure_CauseGroup() {}

func (*SetupFailure_MiscellaneousCause) isSetupFailure_CauseGroup() {}

func (m *SetupFailure) GetCauseGroup() isSetupFailure_CauseGroup {
	if m != nil {
		return m.CauseGroup
	}
	return nil
}

func (m *SetupFailure) GetNetworkLayerCause() RadioNetworkLayer_Cause {
	if x, ok := m.GetCauseGroup().(*SetupFailure_NetworkLayerCause); ok {
		return x.NetworkLayerCause
	}
	return RadioNetworkLayer_UNKNOWN
}

func (m *SetupFailure) GetTransportLayerCause() TransportLayer_Cause {
	if x, ok := m.GetCauseGroup().(*SetupFailure_TransportLayerCause); ok {
		return x.TransportLayerCause
	}
	return TransportLayer_UNKNOWN
}

func (m *SetupFailure) GetProtocolCause() Protocol_Cause {
	if x, ok := m.GetCauseGroup().(*SetupFailure_ProtocolCause); ok {
		return x.ProtocolCause
	}
	return Protocol_UNKNOWN
}

func (m *SetupFailure) GetMiscellaneousCause() Miscellaneous_Cause {
	if x, ok := m.GetCauseGroup().(*SetupFailure_MiscellaneousCause); ok {
		return x.MiscellaneousCause
	}
	return Miscellaneous_UNKNOWN
}

func (m *SetupFailure) GetTimeToWait() TimeToWait {
	if m != nil {
		return m.TimeToWait
	}
	return TimeToWait_UNKNOWN_TIMEOUT
}

func (m *SetupFailure) GetCriticalityDiagnostics() *CriticalityDiagnostics {
	if m != nil {
		return m.CriticalityDiagnostics
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SetupFailure) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SetupFailure_NetworkLayerCause)(nil),
		(*SetupFailure_TransportLayerCause)(nil),
		(*SetupFailure_ProtocolCause)(nil),
		(*SetupFailure_MiscellaneousCause)(nil),
	}
}

type RadioNetworkLayer struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadioNetworkLayer) Reset()         { *m = RadioNetworkLayer{} }
func (m *RadioNetworkLayer) String() string { return proto.CompactTextString(m) }
func (*RadioNetworkLayer) ProtoMessage()    {}
func (*RadioNetworkLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{1}
}

func (m *RadioNetworkLayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadioNetworkLayer.Unmarshal(m, b)
}
func (m *RadioNetworkLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadioNetworkLayer.Marshal(b, m, deterministic)
}
func (m *RadioNetworkLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadioNetworkLayer.Merge(m, src)
}
func (m *RadioNetworkLayer) XXX_Size() int {
	return xxx_messageInfo_RadioNetworkLayer.Size(m)
}
func (m *RadioNetworkLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_RadioNetworkLayer.DiscardUnknown(m)
}

var xxx_messageInfo_RadioNetworkLayer proto.InternalMessageInfo

type TransportLayer struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransportLayer) Reset()         { *m = TransportLayer{} }
func (m *TransportLayer) String() string { return proto.CompactTextString(m) }
func (*TransportLayer) ProtoMessage()    {}
func (*TransportLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{2}
}

func (m *TransportLayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransportLayer.Unmarshal(m, b)
}
func (m *TransportLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransportLayer.Marshal(b, m, deterministic)
}
func (m *TransportLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransportLayer.Merge(m, src)
}
func (m *TransportLayer) XXX_Size() int {
	return xxx_messageInfo_TransportLayer.Size(m)
}
func (m *TransportLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_TransportLayer.DiscardUnknown(m)
}

var xxx_messageInfo_TransportLayer proto.InternalMessageInfo

type Protocol struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Protocol) Reset()         { *m = Protocol{} }
func (m *Protocol) String() string { return proto.CompactTextString(m) }
func (*Protocol) ProtoMessage()    {}
func (*Protocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{3}
}

func (m *Protocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Protocol.Unmarshal(m, b)
}
func (m *Protocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Protocol.Marshal(b, m, deterministic)
}
func (m *Protocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protocol.Merge(m, src)
}
func (m *Protocol) XXX_Size() int {
	return xxx_messageInfo_Protocol.Size(m)
}
func (m *Protocol) XXX_DiscardUnknown() {
	xxx_messageInfo_Protocol.DiscardUnknown(m)
}

var xxx_messageInfo_Protocol proto.InternalMessageInfo

type Miscellaneous struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Miscellaneous) Reset()         { *m = Miscellaneous{} }
func (m *Miscellaneous) String() string { return proto.CompactTextString(m) }
func (*Miscellaneous) ProtoMessage()    {}
func (*Miscellaneous) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{4}
}

func (m *Miscellaneous) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Miscellaneous.Unmarshal(m, b)
}
func (m *Miscellaneous) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Miscellaneous.Marshal(b, m, deterministic)
}
func (m *Miscellaneous) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Miscellaneous.Merge(m, src)
}
func (m *Miscellaneous) XXX_Size() int {
	return xxx_messageInfo_Miscellaneous.Size(m)
}
func (m *Miscellaneous) XXX_DiscardUnknown() {
	xxx_messageInfo_Miscellaneous.DiscardUnknown(m)
}

var xxx_messageInfo_Miscellaneous proto.InternalMessageInfo

type CriticalityDiagnostics struct {
	ProcedureCode                            uint32                                     `protobuf:"varint,1,opt,name=procedure_code,json=procedureCode,proto3" json:"procedure_code,omitempty"`
	TriggeringMessage                        TriggeringMessage                          `protobuf:"varint,2,opt,name=triggering_message,json=triggeringMessage,proto3,enum=entities.TriggeringMessage" json:"triggering_message,omitempty"`
	ProcedureCriticality                     Criticality                                `protobuf:"varint,3,opt,name=procedure_criticality,json=procedureCriticality,proto3,enum=entities.Criticality" json:"procedure_criticality,omitempty"`
	InformationElementCriticalityDiagnostics []*InformationElementCriticalityDiagnostic `protobuf:"bytes,4,rep,name=information_element_criticality_diagnostics,json=informationElementCriticalityDiagnostics,proto3" json:"information_element_criticality_diagnostics,omitempty"`
	XXX_NoUnkeyedLiteral                     struct{}                                   `json:"-"`
	XXX_unrecognized                         []byte                                     `json:"-"`
	XXX_sizecache                            int32                                      `json:"-"`
}

func (m *CriticalityDiagnostics) Reset()         { *m = CriticalityDiagnostics{} }
func (m *CriticalityDiagnostics) String() string { return proto.CompactTextString(m) }
func (*CriticalityDiagnostics) ProtoMessage()    {}
func (*CriticalityDiagnostics) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{5}
}

func (m *CriticalityDiagnostics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CriticalityDiagnostics.Unmarshal(m, b)
}
func (m *CriticalityDiagnostics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CriticalityDiagnostics.Marshal(b, m, deterministic)
}
func (m *CriticalityDiagnostics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CriticalityDiagnostics.Merge(m, src)
}
func (m *CriticalityDiagnostics) XXX_Size() int {
	return xxx_messageInfo_CriticalityDiagnostics.Size(m)
}
func (m *CriticalityDiagnostics) XXX_DiscardUnknown() {
	xxx_messageInfo_CriticalityDiagnostics.DiscardUnknown(m)
}

var xxx_messageInfo_CriticalityDiagnostics proto.InternalMessageInfo

func (m *CriticalityDiagnostics) GetProcedureCode() uint32 {
	if m != nil {
		return m.ProcedureCode
	}
	return 0
}

func (m *CriticalityDiagnostics) GetTriggeringMessage() TriggeringMessage {
	if m != nil {
		return m.TriggeringMessage
	}
	return TriggeringMessage_UNKNOWN_MESSAGE
}

func (m *CriticalityDiagnostics) GetProcedureCriticality() Criticality {
	if m != nil {
		return m.ProcedureCriticality
	}
	return Criticality_UNKNOWN_CRITICALITY
}

func (m *CriticalityDiagnostics) GetInformationElementCriticalityDiagnostics() []*InformationElementCriticalityDiagnostic {
	if m != nil {
		return m.InformationElementCriticalityDiagnostics
	}
	return nil
}

type InformationElementCriticalityDiagnostic struct {
	IeCriticality        Criticality `protobuf:"varint,1,opt,name=ie_criticality,json=ieCriticality,proto3,enum=entities.Criticality" json:"ie_criticality,omitempty"`
	IeId                 uint32      `protobuf:"varint,2,opt,name=ie_id,json=ieId,proto3" json:"ie_id,omitempty"`
	TypeOfError          TypeOfError `protobuf:"varint,3,opt,name=type_of_error,json=typeOfError,proto3,enum=entities.TypeOfError" json:"type_of_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InformationElementCriticalityDiagnostic) Reset() {
	*m = InformationElementCriticalityDiagnostic{}
}
func (m *InformationElementCriticalityDiagnostic) String() string { return proto.CompactTextString(m) }
func (*InformationElementCriticalityDiagnostic) ProtoMessage()    {}
func (*InformationElementCriticalityDiagnostic) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bd8eb0d0558962c, []int{6}
}

func (m *InformationElementCriticalityDiagnostic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InformationElementCriticalityDiagnostic.Unmarshal(m, b)
}
func (m *InformationElementCriticalityDiagnostic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InformationElementCriticalityDiagnostic.Marshal(b, m, deterministic)
}
func (m *InformationElementCriticalityDiagnostic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InformationElementCriticalityDiagnostic.Merge(m, src)
}
func (m *InformationElementCriticalityDiagnostic) XXX_Size() int {
	return xxx_messageInfo_InformationElementCriticalityDiagnostic.Size(m)
}
func (m *InformationElementCriticalityDiagnostic) XXX_DiscardUnknown() {
	xxx_messageInfo_InformationElementCriticalityDiagnostic.DiscardUnknown(m)
}

var xxx_messageInfo_InformationElementCriticalityDiagnostic proto.InternalMessageInfo

func (m *InformationElementCriticalityDiagnostic) GetIeCriticality() Criticality {
	if m != nil {
		return m.IeCriticality
	}
	return Criticality_UNKNOWN_CRITICALITY
}

func (m *InformationElementCriticalityDiagnostic) GetIeId() uint32 {
	if m != nil {
		return m.IeId
	}
	return 0
}

func (m *InformationElementCriticalityDiagnostic) GetTypeOfError() TypeOfError {
	if m != nil {
		return m.TypeOfError
	}
	return TypeOfError_UNKNOWN_ERROR
}

func init() {
	proto.RegisterEnum("entities.TypeOfError", TypeOfError_name, TypeOfError_value)
	proto.RegisterEnum("entities.TimeToWait", TimeToWait_name, TimeToWait_value)
	proto.RegisterEnum("entities.TriggeringMessage", TriggeringMessage_name, TriggeringMessage_value)
	proto.RegisterEnum("entities.Criticality", Criticality_name, Criticality_value)
	proto.RegisterEnum("entities.RadioNetworkLayer_Cause", RadioNetworkLayer_Cause_name, RadioNetworkLayer_Cause_value)
	proto.RegisterEnum("entities.TransportLayer_Cause", TransportLayer_Cause_name, TransportLayer_Cause_value)
	proto.RegisterEnum("entities.Protocol_Cause", Protocol_Cause_name, Protocol_Cause_value)
	proto.RegisterEnum("entities.Miscellaneous_Cause", Miscellaneous_Cause_name, Miscellaneous_Cause_value)
	proto.RegisterType((*SetupFailure)(nil), "entities.SetupFailure")
	proto.RegisterType((*RadioNetworkLayer)(nil), "entities.RadioNetworkLayer")
	proto.RegisterType((*TransportLayer)(nil), "entities.TransportLayer")
	proto.RegisterType((*Protocol)(nil), "entities.Protocol")
	proto.RegisterType((*Miscellaneous)(nil), "entities.Miscellaneous")
	proto.RegisterType((*CriticalityDiagnostics)(nil), "entities.CriticalityDiagnostics")
	proto.RegisterType((*InformationElementCriticalityDiagnostic)(nil), "entities.InformationElementCriticalityDiagnostic")
}

func init() { proto.RegisterFile("x2_setup_failure_response.proto", fileDescriptor_3bd8eb0d0558962c) }

var fileDescriptor_3bd8eb0d0558962c = []byte{
	// 1721 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0xcd, 0x72, 0x1b, 0xb9,
	0xf1, 0x17, 0xa9, 0x2f, 0xff, 0x41, 0x49, 0x86, 0xa0, 0x4f, 0x5b, 0xb6, 0x2c, 0x73, 0xd7, 0x6b,
	0xad, 0xbc, 0x7f, 0xad, 0xa5, 0xad, 0xdd, 0x4a, 0xaa, 0xf6, 0x02, 0x62, 0x40, 0x12, 0xce, 0x0c,
	0x30, 0x0b, 0x60, 0x28, 0x31, 0x39, 0xa0, 0x18, 0x69, 0xac, 0x9a, 0x8a, 0x44, 0xaa, 0xc8, 0x51,
	0x6d, 0xfc, 0x04, 0xa9, 0xca, 0x29, 0xb7, 0x9c, 0x72, 0xc8, 0x33, 0xe4, 0x90, 0x77, 0xca, 0x29,
	0x8f, 0x90, 0xea, 0x99, 0xa1, 0x38, 0x94, 0xb8, 0xae, 0xbd, 0x81, 0xdd, 0x3d, 0x8d, 0xee, 0x5f,
	0xff, 0xba, 0xd1, 0x44, 0xaf, 0xfe, 0x7c, 0xea, 0x46, 0x71, 0x7a, 0x77, 0xeb, 0x3e, 0xf6, 0x92,
	0xeb, 0xbb, 0x61, 0xec, 0x86, 0xf1, 0xe8, 0x76, 0xd0, 0x1f, 0xc5, 0xc7, 0xb7, 0xc3, 0x41, 0x3a,
	0x20, 0x4f, 0xe2, 0x7e, 0x9a, 0xa4, 0x49, 0x3c, 0xaa, 0xff, 0x77, 0x1e, 0xad, 0x18, 0x30, 0x6d,
	0xe6, 0x96, 0xc4, 0xa0, 0x8d, 0x7e, 0x9c, 0xfe, 0x3c, 0x18, 0xfe, 0xc9, 0x5d, 0xf7, 0x3e, 0xc5,
	0x43, 0x77, 0xd1, 0xbb, 0x1b, 0xc5, 0xbb, 0x95, 0x83, 0xca, 0xe1, 0xda, 0xe9, 0xeb, 0xe3, 0xf1,
	0x87, 0xc7, 0xba, 0x77, 0x99, 0x0c, 0x64, 0x6e, 0xe9, 0x83, 0xe1, 0x31, 0x03, 0xc3, 0xf6, 0x9c,
	0x5e, 0xef, 0x97, 0xa4, 0x99, 0x90, 0x58, 0xb4, 0x95, 0x0e, 0x7b, 0xfd, 0xd1, 0xed, 0x60, 0x98,
	0x4e, 0xb9, 0xad, 0x66, 0x6e, 0xf7, 0x27, 0x6e, 0xed, 0xd8, 0x6c, 0xda, 0xe7, 0x46, 0x3a, 0x25,
	0xcf, 0xbd, 0x52, 0xb4, 0x96, 0xa5, 0x73, 0x31, 0xb8, 0x2e, 0xdc, 0xcd, 0x67, 0xee, 0x76, 0x27,
	0xee, 0xc2, 0x42, 0x7f, 0xef, 0x68, 0x75, 0xfc, 0x45, 0xee, 0x22, 0x44, 0x1b, 0x37, 0xc9, 0xe8,
	0x22, 0xbe, 0xbe, 0xee, 0xf5, 0xe3, 0xc1, 0xdd, 0xa8, 0xf0, 0xb3, 0x90, 0xf9, 0x79, 0x39, 0xf1,
	0x13, 0x94, 0x8d, 0xee, 0x9d, 0x91, 0xa9, 0x6f, 0x73, 0x8f, 0x3f, 0xa0, 0x95, 0x34, 0xb9, 0x89,
	0x5d, 0x3a, 0x70, 0x3f, 0xf7, 0x92, 0x74, 0x77, 0x31, 0x73, 0xb5, 0x59, 0xca, 0x30, 0xb9, 0x89,
	0xed, 0xe0, 0xac, 0x97, 0xa4, 0x1a, 0xa5, 0xf7, 0x67, 0xd2, 0x45, 0x3b, 0x17, 0xc3, 0x24, 0x4d,
	0x2e, 0x7a, 0xd7, 0x49, 0xfa, 0xc9, 0x5d, 0x26, 0xbd, 0xab, 0xfe, 0x60, 0x94, 0x26, 0x17, 0xa3,
	0xdd, 0xa5, 0x83, 0xca, 0x61, 0xed, 0xf4, 0x60, 0xe2, 0x82, 0x4d, 0x0c, 0xbd, 0x89, 0x9d, 0xde,
	0xbe, 0x98, 0x29, 0x6f, 0xac, 0xa2, 0x5a, 0x96, 0x96, 0xbb, 0x1a, 0x0e, 0xee, 0x6e, 0xeb, 0xff,
	0x58, 0x41, 0xeb, 0x8f, 0xaa, 0x57, 0xff, 0xcb, 0x0a, 0x5a, 0xcc, 0x33, 0xa8, 0xa1, 0xe5, 0x48,
	0xfe, 0x4e, 0xaa, 0x33, 0x89, 0xe7, 0xc8, 0x21, 0xfa, 0xb2, 0x4d, 0xa5, 0xa7, 0x3a, 0x5c, 0x3b,
	0x8f, 0x1b, 0xa1, 0x69, 0xc3, 0xe7, 0xae, 0xa9, 0xb4, 0xd3, 0xd4, 0x13, 0xca, 0x69, 0x4e, 0x8d,
	0x92, 0x06, 0x57, 0xc8, 0x73, 0xb4, 0x6d, 0x45, 0xc0, 0x1d, 0xd3, 0xc2, 0x0a, 0x46, 0x7d, 0x37,
	0xfe, 0x0e, 0x57, 0x49, 0x1d, 0xed, 0x6b, 0x6e, 0x54, 0xa4, 0x19, 0x77, 0x2a, 0xb4, 0x22, 0x10,
	0x86, 0x5a, 0xa1, 0xe4, 0xc4, 0x66, 0x9e, 0xbc, 0x42, 0x7b, 0x9a, 0x7b, 0x11, 0xe3, 0xce, 0x57,
	0xd4, 0x73, 0x42, 0x3a, 0xc3, 0x75, 0x47, 0xc8, 0x96, 0x63, 0xdc, 0xf7, 0xf1, 0x02, 0xd9, 0x44,
	0x38, 0xa4, 0xda, 0x8a, 0xb2, 0xeb, 0x45, 0xb2, 0x8f, 0x9e, 0x17, 0xd1, 0x3a, 0xc9, 0xcf, 0x1c,
	0x97, 0x0d, 0x17, 0x71, 0x77, 0x7e, 0x4a, 0x43, 0x27, 0x3c, 0xbc, 0x44, 0x0e, 0xd0, 0x8b, 0xb1,
	0x5e, 0xf9, 0x1e, 0xe8, 0x03, 0x5e, 0xb6, 0x58, 0x2e, 0x7b, 0x08, 0xa9, 0xd0, 0x4e, 0x35, 0xcb,
	0xfa, 0x27, 0xe4, 0x19, 0xda, 0x6a, 0x2b, 0x67, 0xa9, 0x6e, 0x71, 0xeb, 0xa4, 0xb2, 0x8e, 0xfa,
	0xbe, 0x3a, 0xe3, 0x1e, 0xfe, 0x3f, 0xf2, 0x02, 0xed, 0xda, 0xf3, 0x53, 0xa7, 0xb9, 0xaf, 0x98,
	0x83, 0x80, 0xa8, 0xef, 0x3b, 0x7e, 0x1e, 0x0a, 0xdd, 0xc5, 0x88, 0xec, 0xa0, 0x0d, 0x5b, 0xe8,
	0x42, 0xcd, 0xc3, 0xb1, 0xa2, 0x46, 0xb6, 0x11, 0x81, 0x9c, 0x72, 0x67, 0x1d, 0x2a, 0x7c, 0x00,
	0x15, 0xaf, 0x90, 0x6f, 0xd1, 0x3b, 0xa9, 0xee, 0x81, 0xcd, 0xf1, 0x32, 0x13, 0x0b, 0xc0, 0xa4,
	0x08, 0x23, 0x83, 0x64, 0x95, 0xec, 0xa2, 0x4d, 0x21, 0x3b, 0xd4, 0x17, 0x9e, 0x0b, 0x02, 0xee,
	0x5a, 0x5a, 0x45, 0x59, 0xd0, 0x6b, 0x00, 0xd6, 0x38, 0x29, 0xd0, 0x30, 0xe5, 0x71, 0xfc, 0x94,
	0xfc, 0x88, 0x7e, 0xc3, 0x25, 0xd3, 0xdd, 0x30, 0x03, 0x5f, 0x48, 0xcb, 0x5b, 0x5a, 0xd8, 0xae,
	0x0b, 0xb5, 0xb2, 0x9c, 0x65, 0x42, 0xea, 0xb7, 0x94, 0x16, 0xb6, 0x1d, 0x98, 0x2c, 0x3c, 0x13,
	0x85, 0xa1, 0xd2, 0x96, 0x7b, 0x18, 0x03, 0x94, 0x9a, 0xc3, 0x2f, 0xc7, 0xda, 0x54, 0x53, 0x66,
	0xb9, 0x16, 0xc6, 0x0a, 0x66, 0x1c, 0x0f, 0x42, 0xdb, 0xc5, 0xeb, 0x00, 0x15, 0x24, 0x90, 0x1b,
	0x85, 0x5c, 0x0b, 0xe5, 0x09, 0x26, 0x6c, 0x17, 0x13, 0xb2, 0x87, 0x76, 0xf8, 0x39, 0x98, 0xcb,
	0x96, 0x0b, 0x38, 0x35, 0x91, 0xe6, 0x01, 0x97, 0x16, 0xa2, 0xdd, 0x28, 0x97, 0x00, 0x0a, 0xf8,
	0x40, 0xbf, 0x49, 0xbe, 0x46, 0x6f, 0xca, 0x32, 0xcb, 0x83, 0x50, 0x69, 0xaa, 0x85, 0xdf, 0x7d,
	0x80, 0xe1, 0x16, 0x79, 0x8a, 0x6a, 0x91, 0x34, 0x21, 0x67, 0xa2, 0x29, 0xb8, 0x87, 0xb7, 0x09,
	0x41, 0x6b, 0x19, 0xa1, 0x1a, 0xd4, 0xa7, 0x92, 0x09, 0xd9, 0xc2, 0x3b, 0x59, 0x49, 0xc7, 0xac,
	0x2e, 0xf3, 0x11, 0xef, 0x42, 0x28, 0x1d, 0xea, 0x47, 0xdc, 0xa9, 0xc8, 0x02, 0x15, 0x8a, 0x62,
	0x3b, 0x4d, 0x65, 0x8b, 0xe3, 0x67, 0x40, 0xd3, 0x20, 0xf2, 0xad, 0x08, 0x7d, 0xee, 0xb8, 0xd3,
	0xb4, 0xe1, 0x04, 0x90, 0xd5, 0x58, 0x2a, 0x19, 0x37, 0xf8, 0x39, 0x14, 0xd7, 0x9c, 0x09, 0xcb,
	0xda, 0x4e, 0x35, 0x9b, 0x4e, 0xc9, 0x96, 0x82, 0x3b, 0xf7, 0x00, 0x80, 0x29, 0x40, 0xdd, 0x4f,
	0x4c, 0xb8, 0xec, 0x2a, 0xfc, 0x82, 0x7c, 0x83, 0x0e, 0xcb, 0x09, 0x4e, 0x1b, 0x42, 0xb7, 0xd9,
	0x36, 0x77, 0xaa, 0xf1, 0x81, 0x33, 0x8b, 0x5f, 0xc2, 0x15, 0xd6, 0x7b, 0x44, 0xb8, 0x7d, 0xb2,
	0x81, 0x9e, 0x82, 0xbc, 0x4c, 0xb6, 0x57, 0xe4, 0x2b, 0x54, 0xa7, 0x79, 0x69, 0x3f, 0xd7, 0xbf,
	0x07, 0x00, 0x5c, 0xa9, 0xff, 0xf0, 0x6b, 0x00, 0x69, 0x66, 0xd3, 0xe2, 0x3a, 0xf0, 0x6e, 0xba,
	0xd7, 0xf3, 0x1b, 0xf0, 0x17, 0x59, 0x68, 0x8f, 0x3b, 0xe5, 0x4b, 0xe0, 0xce, 0xe7, 0xa8, 0x8d,
	0xdf, 0x00, 0x3e, 0x63, 0x2e, 0xff, 0xa4, 0x8c, 0x63, 0x2a, 0x68, 0x08, 0x99, 0x5f, 0xf8, 0x15,
	0x79, 0x8b, 0xbe, 0x28, 0x11, 0xf7, 0x17, 0x39, 0xfa, 0x16, 0x7a, 0x2e, 0xd4, 0x8a, 0x71, 0x2f,
	0xd2, 0xdc, 0x31, 0xa8, 0x89, 0xef, 0x73, 0x0f, 0x1f, 0x66, 0xe9, 0xe9, 0xc0, 0x85, 0x91, 0x0e,
	0x95, 0xe1, 0xf8, 0x6b, 0x48, 0x4f, 0x04, 0xa1, 0x56, 0x1d, 0xee, 0x22, 0xc3, 0xb5, 0x6b, 0x08,
	0xeb, 0x34, 0xb5, 0x1c, 0x1f, 0x01, 0x8e, 0x99, 0x48, 0x48, 0xc8, 0xab, 0x03, 0x04, 0x7e, 0x47,
	0x5e, 0xa3, 0x97, 0x79, 0xf8, 0x4c, 0x49, 0x59, 0x34, 0xcb, 0x99, 0xb0, 0x6d, 0x18, 0x16, 0xbe,
	0x32, 0x16, 0x7f, 0x03, 0x55, 0x6c, 0x52, 0xe1, 0xc3, 0xd5, 0xd0, 0xaa, 0x6d, 0x5e, 0x24, 0x0c,
	0x8d, 0xa6, 0x9b, 0x94, 0x71, 0x77, 0x1f, 0x1b, 0xfe, 0x7f, 0x60, 0x52, 0x83, 0x53, 0x5d, 0x50,
	0x50, 0xc9, 0x07, 0xb9, 0x1c, 0x13, 0x8c, 0x56, 0x02, 0xd6, 0x72, 0x81, 0x6a, 0x08, 0x1f, 0x62,
	0xf8, 0x16, 0x24, 0xa6, 0x2c, 0x79, 0x0f, 0xa8, 0x31, 0x15, 0x49, 0x98, 0x33, 0x94, 0xb5, 0xb9,
	0x71, 0x01, 0x3d, 0x2f, 0x58, 0x75, 0x02, 0x21, 0x4f, 0xcf, 0x3e, 0xd7, 0x9a, 0x1e, 0x8f, 0xa7,
	0x64, 0x1d, 0xad, 0x86, 0x1e, 0x0b, 0x33, 0x2e, 0x65, 0x75, 0xff, 0xae, 0xfe, 0x07, 0xb4, 0x36,
	0xfd, 0x0a, 0xd7, 0xc5, 0xcc, 0xa7, 0xa1, 0x8e, 0xf6, 0xad, 0xa6, 0xd2, 0x64, 0xcd, 0x7e, 0xcf,
	0x94, 0x48, 0x4e, 0x8a, 0x5a, 0x79, 0xd8, 0x8d, 0xd5, 0xfa, 0xdf, 0xab, 0xe8, 0xc9, 0xf8, 0x51,
	0xae, 0xff, 0xb5, 0x3a, 0xd3, 0xf1, 0x33, 0xb4, 0x95, 0x39, 0x6e, 0x72, 0xed, 0x4c, 0x57, 0x5a,
	0x7a, 0xee, 0xb8, 0xd6, 0x4a, 0xe3, 0x0a, 0xd0, 0x88, 0x36, 0x8c, 0x85, 0xe1, 0x33, 0xa5, 0x72,
	0x9a, 0x67, 0xbd, 0x51, 0x25, 0xef, 0xd0, 0xdb, 0xd9, 0x16, 0xa2, 0x25, 0x95, 0xe6, 0x8e, 0x4a,
	0x0f, 0x80, 0x16, 0xcd, 0x2e, 0x9e, 0x27, 0xc7, 0xe8, 0x28, 0xe0, 0xc6, 0xd0, 0x16, 0xcf, 0xc0,
	0x67, 0x2a, 0x08, 0xa9, 0x15, 0xd0, 0x21, 0x59, 0x65, 0x35, 0x67, 0x5c, 0xc0, 0x8c, 0x30, 0x16,
	0x88, 0xb1, 0x00, 0xb3, 0xc4, 0xf0, 0x80, 0x4a, 0x2b, 0x58, 0x11, 0xd2, 0xe2, 0xc3, 0x14, 0x97,
	0xc8, 0xf7, 0xe8, 0x64, 0x76, 0x04, 0x4d, 0xea, 0x1b, 0xee, 0x77, 0x81, 0x40, 0xc6, 0xea, 0x88,
	0x41, 0x6f, 0x17, 0xd7, 0xe3, 0xe5, 0xfa, 0xbf, 0x2a, 0x68, 0x75, 0x6a, 0xcd, 0xa8, 0xff, 0xb3,
	0x32, 0x13, 0x9e, 0x57, 0x68, 0x8f, 0x29, 0x69, 0xb5, 0xf2, 0x73, 0x3a, 0x19, 0x03, 0x33, 0xf5,
	0xbe, 0x80, 0x15, 0x98, 0xfd, 0x6d, 0xaa, 0xbd, 0x33, 0xaa, 0xb9, 0x2b, 0xf8, 0x88, 0xab, 0x40,
	0x6a, 0x15, 0xe4, 0x54, 0xec, 0x70, 0x99, 0xf5, 0x55, 0x06, 0x00, 0x24, 0xce, 0xa5, 0x8a, 0x5a,
	0xed, 0xbc, 0x0f, 0x42, 0x9f, 0x4a, 0x5e, 0xf6, 0x7c, 0xdf, 0xae, 0x78, 0xe1, 0x61, 0xb2, 0x8b,
	0xf5, 0xff, 0x54, 0xd1, 0xf6, 0xec, 0x75, 0x84, 0xbc, 0xc9, 0xd6, 0xb3, 0x8b, 0xf8, 0x12, 0x16,
	0xd0, 0x8b, 0xc1, 0x65, 0xbe, 0x44, 0xae, 0x66, 0x2b, 0x58, 0x2e, 0x65, 0x83, 0xcb, 0x98, 0x7c,
	0x40, 0x24, 0x1d, 0x26, 0x57, 0x57, 0xf1, 0x30, 0xe9, 0x5f, 0xb9, 0x9b, 0x78, 0x34, 0xea, 0x5d,
	0x8d, 0x17, 0xc3, 0xbd, 0xf2, 0x62, 0x38, 0xb6, 0x09, 0x72, 0x13, 0xbd, 0x9e, 0x3e, 0x14, 0x91,
	0x0f, 0x68, 0xab, 0x74, 0xe5, 0x24, 0xac, 0x62, 0x31, 0xdc, 0x9a, 0xb9, 0x42, 0xe9, 0xcd, 0x49,
	0x40, 0x13, 0x29, 0xf9, 0x5b, 0x05, 0xbd, 0x4b, 0xfa, 0x1f, 0x07, 0xc3, 0x9b, 0x5e, 0x9a, 0x0c,
	0xfa, 0x2e, 0xbe, 0x8e, 0x6f, 0xe2, 0x7e, 0xea, 0x7e, 0x69, 0x4b, 0x5b, 0x38, 0x98, 0x3f, 0xac,
	0x9d, 0x9e, 0x4c, 0xae, 0x10, 0x93, 0x8f, 0x79, 0xfe, 0xed, 0x4c, 0xa0, 0xf4, 0x61, 0xf2, 0xeb,
	0x0c, 0x47, 0xf5, 0x7f, 0x57, 0xd0, 0xdb, 0x5f, 0xe9, 0x95, 0xfc, 0x88, 0xd6, 0x92, 0x69, 0x0c,
	0x2a, 0x9f, 0xc3, 0x60, 0x35, 0x99, 0x4a, 0x7e, 0x03, 0x2d, 0x26, 0xb1, 0x4b, 0x2e, 0xb3, 0x3a,
	0xac, 0xea, 0x85, 0x24, 0x16, 0x97, 0xe4, 0xb7, 0x68, 0x35, 0xfd, 0x74, 0x1b, 0xbb, 0xc1, 0x47,
	0x17, 0x0f, 0x87, 0x83, 0xe1, 0x63, 0x54, 0xed, 0xa7, 0xdb, 0x58, 0x7d, 0xe4, 0xa0, 0xd4, 0xb5,
	0x74, 0xf2, 0xe3, 0x88, 0xa2, 0x5a, 0x49, 0x07, 0x53, 0xe7, 0xfe, 0xbd, 0xcf, 0xda, 0x68, 0x0e,
	0x5a, 0x0b, 0x98, 0x18, 0x49, 0x8f, 0x6b, 0x63, 0x95, 0x02, 0x22, 0xd7, 0xd0, 0x72, 0x20, 0x32,
	0x12, 0xe2, 0xea, 0xd1, 0xef, 0x11, 0x9a, 0xac, 0xce, 0xd9, 0x88, 0x2e, 0x3c, 0xc0, 0x4b, 0xa4,
	0x22, 0x8b, 0xe7, 0xc8, 0x32, 0x9a, 0xef, 0x9c, 0xc0, 0x2e, 0x0a, 0x87, 0x53, 0x83, 0xab, 0xd9,
	0xe1, 0x7b, 0x83, 0xe7, 0xc9, 0x13, 0xb4, 0xd0, 0x39, 0x79, 0x0f, 0x14, 0x86, 0xd3, 0xe9, 0x7b,
	0x83, 0x17, 0xb3, 0xd3, 0x0f, 0xef, 0x0d, 0x5e, 0x3a, 0x1a, 0xa2, 0xf5, 0x47, 0xfc, 0x2a, 0x5f,
	0x31, 0xee, 0xd2, 0x39, 0x78, 0xdf, 0x84, 0x14, 0x56, 0xd0, 0x62, 0x91, 0xc9, 0xe5, 0x95, 0xec,
	0xd5, 0x8f, 0x18, 0xb4, 0x4c, 0x33, 0xf2, 0x61, 0x77, 0x60, 0x2a, 0x80, 0xae, 0xdb, 0x45, 0x9b,
	0x91, 0x9c, 0xa1, 0x99, 0x3f, 0xfa, 0x80, 0x6a, 0x65, 0xc4, 0x77, 0xd0, 0xc6, 0xf8, 0xb6, 0xf1,
	0xab, 0x0a, 0x13, 0x7e, 0x8e, 0x20, 0xb4, 0x54, 0x0c, 0xb7, 0x0a, 0x9c, 0xf3, 0x31, 0x86, 0xab,
	0x70, 0x1e, 0xcf, 0xb1, 0x3f, 0x2e, 0x65, 0xff, 0x6a, 0xbe, 0xfb, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x99, 0x45, 0x26, 0x39, 0xf9, 0x0d, 0x00, 0x00,
}
