//
// Copyright 2019 AT&T Intellectual Property
// Copyright 2019 Nokia
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enb.proto

package entities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FreqBandIndicatorPriority int32

const (
	FreqBandIndicatorPriority_UNKNOWN_FREQ_BAND_INDICATOR_PRIORITY FreqBandIndicatorPriority = 0
	FreqBandIndicatorPriority_NOT_BROADCASTED                      FreqBandIndicatorPriority = 1
	FreqBandIndicatorPriority_BROADCASTED                          FreqBandIndicatorPriority = 2
)

var FreqBandIndicatorPriority_name = map[int32]string{
	0: "UNKNOWN_FREQ_BAND_INDICATOR_PRIORITY",
	1: "NOT_BROADCASTED",
	2: "BROADCASTED",
}

var FreqBandIndicatorPriority_value = map[string]int32{
	"UNKNOWN_FREQ_BAND_INDICATOR_PRIORITY": 0,
	"NOT_BROADCASTED":                      1,
	"BROADCASTED":                          2,
}

func (x FreqBandIndicatorPriority) String() string {
	return proto.EnumName(FreqBandIndicatorPriority_name, int32(x))
}

func (FreqBandIndicatorPriority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{0}
}

type BandwidthReducedSI int32

const (
	BandwidthReducedSI_UNKNOWN_BANDWIDTH_REDUCED_SI BandwidthReducedSI = 0
	BandwidthReducedSI_SCHEDULED                    BandwidthReducedSI = 1
)

var BandwidthReducedSI_name = map[int32]string{
	0: "UNKNOWN_BANDWIDTH_REDUCED_SI",
	1: "SCHEDULED",
}

var BandwidthReducedSI_value = map[string]int32{
	"UNKNOWN_BANDWIDTH_REDUCED_SI": 0,
	"SCHEDULED":                    1,
}

func (x BandwidthReducedSI) String() string {
	return proto.EnumName(BandwidthReducedSI_name, int32(x))
}

func (BandwidthReducedSI) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{1}
}

type SubframeAllocationType int32

const (
	SubframeAllocationType_UNKNOWN_SUBFRAME_ALLOCATION_TYPE SubframeAllocationType = 0
	SubframeAllocationType_ONE_FRAME                        SubframeAllocationType = 1
	SubframeAllocationType_FOUR_FRAME                       SubframeAllocationType = 2
)

var SubframeAllocationType_name = map[int32]string{
	0: "UNKNOWN_SUBFRAME_ALLOCATION_TYPE",
	1: "ONE_FRAME",
	2: "FOUR_FRAME",
}

var SubframeAllocationType_value = map[string]int32{
	"UNKNOWN_SUBFRAME_ALLOCATION_TYPE": 0,
	"ONE_FRAME":                        1,
	"FOUR_FRAME":                       2,
}

func (x SubframeAllocationType) String() string {
	return proto.EnumName(SubframeAllocationType_name, int32(x))
}

func (SubframeAllocationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{2}
}

type RadioframeAllocationPeriod int32

const (
	RadioframeAllocationPeriod_UNKNOWN_RADIOFRAME_ALLOCATION_PERIOD RadioframeAllocationPeriod = 0
	RadioframeAllocationPeriod_N1                                   RadioframeAllocationPeriod = 1
	RadioframeAllocationPeriod_N2                                   RadioframeAllocationPeriod = 2
	RadioframeAllocationPeriod_N4                                   RadioframeAllocationPeriod = 3
	RadioframeAllocationPeriod_N8                                   RadioframeAllocationPeriod = 4
	RadioframeAllocationPeriod_N16                                  RadioframeAllocationPeriod = 5
	RadioframeAllocationPeriod_N32                                  RadioframeAllocationPeriod = 6
)

var RadioframeAllocationPeriod_name = map[int32]string{
	0: "UNKNOWN_RADIOFRAME_ALLOCATION_PERIOD",
	1: "N1",
	2: "N2",
	3: "N4",
	4: "N8",
	5: "N16",
	6: "N32",
}

var RadioframeAllocationPeriod_value = map[string]int32{
	"UNKNOWN_RADIOFRAME_ALLOCATION_PERIOD": 0,
	"N1":                                   1,
	"N2":                                   2,
	"N4":                                   3,
	"N8":                                   4,
	"N16":                                  5,
	"N32":                                  6,
}

func (x RadioframeAllocationPeriod) String() string {
	return proto.EnumName(RadioframeAllocationPeriod_name, int32(x))
}

func (RadioframeAllocationPeriod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{3}
}

type NumberOfAntennaPorts int32

const (
	NumberOfAntennaPorts_UNKNOWN_NUMBER_OF_ANTENNA_PORTS NumberOfAntennaPorts = 0
	NumberOfAntennaPorts_AN1                             NumberOfAntennaPorts = 1
	NumberOfAntennaPorts_AN2                             NumberOfAntennaPorts = 2
	NumberOfAntennaPorts_AN4                             NumberOfAntennaPorts = 3
)

var NumberOfAntennaPorts_name = map[int32]string{
	0: "UNKNOWN_NUMBER_OF_ANTENNA_PORTS",
	1: "AN1",
	2: "AN2",
	3: "AN4",
}

var NumberOfAntennaPorts_value = map[string]int32{
	"UNKNOWN_NUMBER_OF_ANTENNA_PORTS": 0,
	"AN1":                             1,
	"AN2":                             2,
	"AN4":                             3,
}

func (x NumberOfAntennaPorts) String() string {
	return proto.EnumName(NumberOfAntennaPorts_name, int32(x))
}

func (NumberOfAntennaPorts) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{4}
}

type EnbType int32

const (
	EnbType_UNKNOWN_ENB_TYPE EnbType = 0
	EnbType_MACRO_ENB        EnbType = 1
	EnbType_HOME_ENB         EnbType = 2
	EnbType_SHORT_MACRO_ENB  EnbType = 3
	EnbType_LONG_MACRO_ENB   EnbType = 4
)

var EnbType_name = map[int32]string{
	0: "UNKNOWN_ENB_TYPE",
	1: "MACRO_ENB",
	2: "HOME_ENB",
	3: "SHORT_MACRO_ENB",
	4: "LONG_MACRO_ENB",
}

var EnbType_value = map[string]int32{
	"UNKNOWN_ENB_TYPE": 0,
	"MACRO_ENB":        1,
	"HOME_ENB":         2,
	"SHORT_MACRO_ENB":  3,
	"LONG_MACRO_ENB":   4,
}

func (x EnbType) String() string {
	return proto.EnumName(EnbType_name, int32(x))
}

func (EnbType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{5}
}

type SubframeAssignment int32

const (
	SubframeAssignment_UNKNOWN_SUBFRAME_ASSIGNMENT SubframeAssignment = 0
	SubframeAssignment_SA0                         SubframeAssignment = 1
	SubframeAssignment_SA1                         SubframeAssignment = 2
	SubframeAssignment_SA2                         SubframeAssignment = 3
	SubframeAssignment_SA3                         SubframeAssignment = 4
	SubframeAssignment_SA4                         SubframeAssignment = 5
	SubframeAssignment_SA5                         SubframeAssignment = 6
	SubframeAssignment_SA6                         SubframeAssignment = 7
)

var SubframeAssignment_name = map[int32]string{
	0: "UNKNOWN_SUBFRAME_ASSIGNMENT",
	1: "SA0",
	2: "SA1",
	3: "SA2",
	4: "SA3",
	5: "SA4",
	6: "SA5",
	7: "SA6",
}

var SubframeAssignment_value = map[string]int32{
	"UNKNOWN_SUBFRAME_ASSIGNMENT": 0,
	"SA0":                         1,
	"SA1":                         2,
	"SA2":                         3,
	"SA3":                         4,
	"SA4":                         5,
	"SA5":                         6,
	"SA6":                         7,
}

func (x SubframeAssignment) String() string {
	return proto.EnumName(SubframeAssignment_name, int32(x))
}

func (SubframeAssignment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{6}
}

type CyclicPrefix int32

const (
	CyclicPrefix_UNKNOWN_CYCLIC_PREFIX CyclicPrefix = 0
	CyclicPrefix_NORMAL                CyclicPrefix = 1
	CyclicPrefix_EXTENDED              CyclicPrefix = 2
)

var CyclicPrefix_name = map[int32]string{
	0: "UNKNOWN_CYCLIC_PREFIX",
	1: "NORMAL",
	2: "EXTENDED",
}

var CyclicPrefix_value = map[string]int32{
	"UNKNOWN_CYCLIC_PREFIX": 0,
	"NORMAL":                1,
	"EXTENDED":              2,
}

func (x CyclicPrefix) String() string {
	return proto.EnumName(CyclicPrefix_name, int32(x))
}

func (CyclicPrefix) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{7}
}

type TransmissionBandwidth int32

const (
	TransmissionBandwidth_UNKNOWN_TRANSMISSION_BANDWIDTH TransmissionBandwidth = 0
	TransmissionBandwidth_BW6                            TransmissionBandwidth = 1
	TransmissionBandwidth_BW15                           TransmissionBandwidth = 2
	TransmissionBandwidth_BW25                           TransmissionBandwidth = 3
	TransmissionBandwidth_BW50                           TransmissionBandwidth = 4
	TransmissionBandwidth_BW75                           TransmissionBandwidth = 5
	TransmissionBandwidth_BW100                          TransmissionBandwidth = 6
	TransmissionBandwidth_BW1                            TransmissionBandwidth = 7
)

var TransmissionBandwidth_name = map[int32]string{
	0: "UNKNOWN_TRANSMISSION_BANDWIDTH",
	1: "BW6",
	2: "BW15",
	3: "BW25",
	4: "BW50",
	5: "BW75",
	6: "BW100",
	7: "BW1",
}

var TransmissionBandwidth_value = map[string]int32{
	"UNKNOWN_TRANSMISSION_BANDWIDTH": 0,
	"BW6":                            1,
	"BW15":                           2,
	"BW25":                           3,
	"BW50":                           4,
	"BW75":                           5,
	"BW100":                          6,
	"BW1":                            7,
}

func (x TransmissionBandwidth) String() string {
	return proto.EnumName(TransmissionBandwidth_name, int32(x))
}

func (TransmissionBandwidth) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{8}
}

type Eutra_Mode int32

const (
	Eutra_UNKNOWN Eutra_Mode = 0
	Eutra_FDD     Eutra_Mode = 1
	Eutra_TDD     Eutra_Mode = 2
)

var Eutra_Mode_name = map[int32]string{
	0: "UNKNOWN",
	1: "FDD",
	2: "TDD",
}

var Eutra_Mode_value = map[string]int32{
	"UNKNOWN": 0,
	"FDD":     1,
	"TDD":     2,
}

func (x Eutra_Mode) String() string {
	return proto.EnumName(Eutra_Mode_name, int32(x))
}

func (Eutra_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{3, 0}
}

type SpecialSubframe_Patterns int32

const (
	SpecialSubframe_UNKNOWN SpecialSubframe_Patterns = 0
	SpecialSubframe_SSP0    SpecialSubframe_Patterns = 1
	SpecialSubframe_SSP1    SpecialSubframe_Patterns = 2
	SpecialSubframe_SSP2    SpecialSubframe_Patterns = 3
	SpecialSubframe_SSP3    SpecialSubframe_Patterns = 4
	SpecialSubframe_SSP4    SpecialSubframe_Patterns = 5
	SpecialSubframe_SSP5    SpecialSubframe_Patterns = 6
	SpecialSubframe_SSP6    SpecialSubframe_Patterns = 7
	SpecialSubframe_SSP7    SpecialSubframe_Patterns = 8
	SpecialSubframe_SSP8    SpecialSubframe_Patterns = 9
)

var SpecialSubframe_Patterns_name = map[int32]string{
	0: "UNKNOWN",
	1: "SSP0",
	2: "SSP1",
	3: "SSP2",
	4: "SSP3",
	5: "SSP4",
	6: "SSP5",
	7: "SSP6",
	8: "SSP7",
	9: "SSP8",
}

var SpecialSubframe_Patterns_value = map[string]int32{
	"UNKNOWN": 0,
	"SSP0":    1,
	"SSP1":    2,
	"SSP2":    3,
	"SSP3":    4,
	"SSP4":    5,
	"SSP5":    6,
	"SSP6":    7,
	"SSP7":    8,
	"SSP8":    9,
}

func (x SpecialSubframe_Patterns) String() string {
	return proto.EnumName(SpecialSubframe_Patterns_name, int32(x))
}

func (SpecialSubframe_Patterns) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{12, 0}
}

type AdditionalSpecialSubframe_Patterns int32

const (
	AdditionalSpecialSubframe_UNKNOWN AdditionalSpecialSubframe_Patterns = 0
	AdditionalSpecialSubframe_SSP0    AdditionalSpecialSubframe_Patterns = 1
	AdditionalSpecialSubframe_SSP1    AdditionalSpecialSubframe_Patterns = 2
	AdditionalSpecialSubframe_SSP2    AdditionalSpecialSubframe_Patterns = 3
	AdditionalSpecialSubframe_SSP3    AdditionalSpecialSubframe_Patterns = 4
	AdditionalSpecialSubframe_SSP4    AdditionalSpecialSubframe_Patterns = 5
	AdditionalSpecialSubframe_SSP5    AdditionalSpecialSubframe_Patterns = 6
	AdditionalSpecialSubframe_SSP6    AdditionalSpecialSubframe_Patterns = 7
	AdditionalSpecialSubframe_SSP7    AdditionalSpecialSubframe_Patterns = 8
	AdditionalSpecialSubframe_SSP8    AdditionalSpecialSubframe_Patterns = 9
	AdditionalSpecialSubframe_SSP9    AdditionalSpecialSubframe_Patterns = 10
)

var AdditionalSpecialSubframe_Patterns_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "SSP0",
	2:  "SSP1",
	3:  "SSP2",
	4:  "SSP3",
	5:  "SSP4",
	6:  "SSP5",
	7:  "SSP6",
	8:  "SSP7",
	9:  "SSP8",
	10: "SSP9",
}

var AdditionalSpecialSubframe_Patterns_value = map[string]int32{
	"UNKNOWN": 0,
	"SSP0":    1,
	"SSP1":    2,
	"SSP2":    3,
	"SSP3":    4,
	"SSP4":    5,
	"SSP5":    6,
	"SSP6":    7,
	"SSP7":    8,
	"SSP8":    9,
	"SSP9":    10,
}

func (x AdditionalSpecialSubframe_Patterns) String() string {
	return proto.EnumName(AdditionalSpecialSubframe_Patterns_name, int32(x))
}

func (AdditionalSpecialSubframe_Patterns) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{13, 0}
}

type AdditionalSpecialSubframePatterns_Extension int32

const (
	AdditionalSpecialSubframePatterns_UNKNOWN AdditionalSpecialSubframePatterns_Extension = 0
	AdditionalSpecialSubframePatterns_SSP10   AdditionalSpecialSubframePatterns_Extension = 1
)

var AdditionalSpecialSubframePatterns_Extension_name = map[int32]string{
	0: "UNKNOWN",
	1: "SSP10",
}

var AdditionalSpecialSubframePatterns_Extension_value = map[string]int32{
	"UNKNOWN": 0,
	"SSP10":   1,
}

func (x AdditionalSpecialSubframePatterns_Extension) String() string {
	return proto.EnumName(AdditionalSpecialSubframePatterns_Extension_name, int32(x))
}

func (AdditionalSpecialSubframePatterns_Extension) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{14, 0}
}

type Enb struct {
	EnbType              EnbType           `protobuf:"varint,1,opt,name=enb_type,json=enbType,proto3,enum=entities.EnbType" json:"enb_type,omitempty"`
	ServedCells          []*ServedCellInfo `protobuf:"bytes,2,rep,name=served_cells,json=servedCells,proto3" json:"served_cells,omitempty"`
	GuGroupIds           []string          `protobuf:"bytes,3,rep,name=gu_group_ids,json=guGroupIds,proto3" json:"gu_group_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Enb) Reset()         { *m = Enb{} }
func (m *Enb) String() string { return proto.CompactTextString(m) }
func (*Enb) ProtoMessage()    {}
func (*Enb) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{0}
}

func (m *Enb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Enb.Unmarshal(m, b)
}
func (m *Enb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Enb.Marshal(b, m, deterministic)
}
func (m *Enb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Enb.Merge(m, src)
}
func (m *Enb) XXX_Size() int {
	return xxx_messageInfo_Enb.Size(m)
}
func (m *Enb) XXX_DiscardUnknown() {
	xxx_messageInfo_Enb.DiscardUnknown(m)
}

var xxx_messageInfo_Enb proto.InternalMessageInfo

func (m *Enb) GetEnbType() EnbType {
	if m != nil {
		return m.EnbType
	}
	return EnbType_UNKNOWN_ENB_TYPE
}

func (m *Enb) GetServedCells() []*ServedCellInfo {
	if m != nil {
		return m.ServedCells
	}
	return nil
}

func (m *Enb) GetGuGroupIds() []string {
	if m != nil {
		return m.GuGroupIds
	}
	return nil
}

type ServedCellInfo struct {
	Pci                       uint32                    `protobuf:"varint,1,opt,name=pci,proto3" json:"pci,omitempty"`
	CellId                    string                    `protobuf:"bytes,2,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
	Tac                       string                    `protobuf:"bytes,3,opt,name=tac,proto3" json:"tac,omitempty"`
	BroadcastPlmns            []string                  `protobuf:"bytes,4,rep,name=broadcast_plmns,json=broadcastPlmns,proto3" json:"broadcast_plmns,omitempty"`
	ChoiceEutraMode           *ChoiceEUTRAMode          `protobuf:"bytes,5,opt,name=choice_eutra_mode,json=choiceEutraMode,proto3" json:"choice_eutra_mode,omitempty"`
	EutraMode                 Eutra_Mode                `protobuf:"varint,6,opt,name=eutra_mode,json=eutraMode,proto3,enum=entities.Eutra_Mode" json:"eutra_mode,omitempty"`
	NumberOfAntennaPorts      NumberOfAntennaPorts      `protobuf:"varint,7,opt,name=number_of_antenna_ports,json=numberOfAntennaPorts,proto3,enum=entities.NumberOfAntennaPorts" json:"number_of_antenna_ports,omitempty"`
	PrachConfiguration        *PrachConfiguration       `protobuf:"bytes,8,opt,name=prach_configuration,json=prachConfiguration,proto3" json:"prach_configuration,omitempty"`
	MbsfnSubframeInfos        []*MbsfnSubframe          `protobuf:"bytes,9,rep,name=mbsfn_subframe_infos,json=mbsfnSubframeInfos,proto3" json:"mbsfn_subframe_infos,omitempty"`
	CsgId                     string                    `protobuf:"bytes,10,opt,name=csg_id,json=csgId,proto3" json:"csg_id,omitempty"`
	MbmsServiceAreaIdentities []string                  `protobuf:"bytes,11,rep,name=mbms_service_area_identities,json=mbmsServiceAreaIdentities,proto3" json:"mbms_service_area_identities,omitempty"`
	MultibandInfos            []uint32                  `protobuf:"varint,12,rep,packed,name=multiband_infos,json=multibandInfos,proto3" json:"multiband_infos,omitempty"`
	FreqBandIndicatorPriority FreqBandIndicatorPriority `protobuf:"varint,13,opt,name=freq_band_indicator_priority,json=freqBandIndicatorPriority,proto3,enum=entities.FreqBandIndicatorPriority" json:"freq_band_indicator_priority,omitempty"`
	BandwidthReducedSi        BandwidthReducedSI        `protobuf:"varint,14,opt,name=bandwidth_reduced_si,json=bandwidthReducedSi,proto3,enum=entities.BandwidthReducedSI" json:"bandwidth_reduced_si,omitempty"`
	NeighbourInfos            []*NeighbourInformation   `protobuf:"bytes,15,rep,name=neighbour_infos,json=neighbourInfos,proto3" json:"neighbour_infos,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                  `json:"-"`
	XXX_unrecognized          []byte                    `json:"-"`
	XXX_sizecache             int32                     `json:"-"`
}

func (m *ServedCellInfo) Reset()         { *m = ServedCellInfo{} }
func (m *ServedCellInfo) String() string { return proto.CompactTextString(m) }
func (*ServedCellInfo) ProtoMessage()    {}
func (*ServedCellInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{1}
}

func (m *ServedCellInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServedCellInfo.Unmarshal(m, b)
}
func (m *ServedCellInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServedCellInfo.Marshal(b, m, deterministic)
}
func (m *ServedCellInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServedCellInfo.Merge(m, src)
}
func (m *ServedCellInfo) XXX_Size() int {
	return xxx_messageInfo_ServedCellInfo.Size(m)
}
func (m *ServedCellInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServedCellInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServedCellInfo proto.InternalMessageInfo

func (m *ServedCellInfo) GetPci() uint32 {
	if m != nil {
		return m.Pci
	}
	return 0
}

func (m *ServedCellInfo) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

func (m *ServedCellInfo) GetTac() string {
	if m != nil {
		return m.Tac
	}
	return ""
}

func (m *ServedCellInfo) GetBroadcastPlmns() []string {
	if m != nil {
		return m.BroadcastPlmns
	}
	return nil
}

func (m *ServedCellInfo) GetChoiceEutraMode() *ChoiceEUTRAMode {
	if m != nil {
		return m.ChoiceEutraMode
	}
	return nil
}

func (m *ServedCellInfo) GetEutraMode() Eutra_Mode {
	if m != nil {
		return m.EutraMode
	}
	return Eutra_UNKNOWN
}

func (m *ServedCellInfo) GetNumberOfAntennaPorts() NumberOfAntennaPorts {
	if m != nil {
		return m.NumberOfAntennaPorts
	}
	return NumberOfAntennaPorts_UNKNOWN_NUMBER_OF_ANTENNA_PORTS
}

func (m *ServedCellInfo) GetPrachConfiguration() *PrachConfiguration {
	if m != nil {
		return m.PrachConfiguration
	}
	return nil
}

func (m *ServedCellInfo) GetMbsfnSubframeInfos() []*MbsfnSubframe {
	if m != nil {
		return m.MbsfnSubframeInfos
	}
	return nil
}

func (m *ServedCellInfo) GetCsgId() string {
	if m != nil {
		return m.CsgId
	}
	return ""
}

func (m *ServedCellInfo) GetMbmsServiceAreaIdentities() []string {
	if m != nil {
		return m.MbmsServiceAreaIdentities
	}
	return nil
}

func (m *ServedCellInfo) GetMultibandInfos() []uint32 {
	if m != nil {
		return m.MultibandInfos
	}
	return nil
}

func (m *ServedCellInfo) GetFreqBandIndicatorPriority() FreqBandIndicatorPriority {
	if m != nil {
		return m.FreqBandIndicatorPriority
	}
	return FreqBandIndicatorPriority_UNKNOWN_FREQ_BAND_INDICATOR_PRIORITY
}

func (m *ServedCellInfo) GetBandwidthReducedSi() BandwidthReducedSI {
	if m != nil {
		return m.BandwidthReducedSi
	}
	return BandwidthReducedSI_UNKNOWN_BANDWIDTH_REDUCED_SI
}

func (m *ServedCellInfo) GetNeighbourInfos() []*NeighbourInformation {
	if m != nil {
		return m.NeighbourInfos
	}
	return nil
}

type ChoiceEUTRAMode struct {
	Fdd                  *FddInfo `protobuf:"bytes,1,opt,name=fdd,proto3" json:"fdd,omitempty"`
	Tdd                  *TddInfo `protobuf:"bytes,2,opt,name=tdd,proto3" json:"tdd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChoiceEUTRAMode) Reset()         { *m = ChoiceEUTRAMode{} }
func (m *ChoiceEUTRAMode) String() string { return proto.CompactTextString(m) }
func (*ChoiceEUTRAMode) ProtoMessage()    {}
func (*ChoiceEUTRAMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{2}
}

func (m *ChoiceEUTRAMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChoiceEUTRAMode.Unmarshal(m, b)
}
func (m *ChoiceEUTRAMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChoiceEUTRAMode.Marshal(b, m, deterministic)
}
func (m *ChoiceEUTRAMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChoiceEUTRAMode.Merge(m, src)
}
func (m *ChoiceEUTRAMode) XXX_Size() int {
	return xxx_messageInfo_ChoiceEUTRAMode.Size(m)
}
func (m *ChoiceEUTRAMode) XXX_DiscardUnknown() {
	xxx_messageInfo_ChoiceEUTRAMode.DiscardUnknown(m)
}

var xxx_messageInfo_ChoiceEUTRAMode proto.InternalMessageInfo

func (m *ChoiceEUTRAMode) GetFdd() *FddInfo {
	if m != nil {
		return m.Fdd
	}
	return nil
}

func (m *ChoiceEUTRAMode) GetTdd() *TddInfo {
	if m != nil {
		return m.Tdd
	}
	return nil
}

type Eutra struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Eutra) Reset()         { *m = Eutra{} }
func (m *Eutra) String() string { return proto.CompactTextString(m) }
func (*Eutra) ProtoMessage()    {}
func (*Eutra) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{3}
}

func (m *Eutra) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Eutra.Unmarshal(m, b)
}
func (m *Eutra) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Eutra.Marshal(b, m, deterministic)
}
func (m *Eutra) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Eutra.Merge(m, src)
}
func (m *Eutra) XXX_Size() int {
	return xxx_messageInfo_Eutra.Size(m)
}
func (m *Eutra) XXX_DiscardUnknown() {
	xxx_messageInfo_Eutra.DiscardUnknown(m)
}

var xxx_messageInfo_Eutra proto.InternalMessageInfo

type NeighbourInformation struct {
	Ecgi                 string   `protobuf:"bytes,1,opt,name=ecgi,proto3" json:"ecgi,omitempty"`
	Pci                  uint32   `protobuf:"varint,2,opt,name=pci,proto3" json:"pci,omitempty"`
	EarFcn               uint32   `protobuf:"varint,3,opt,name=ear_fcn,json=earFcn,proto3" json:"ear_fcn,omitempty"`
	Tac                  string   `protobuf:"bytes,4,opt,name=tac,proto3" json:"tac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NeighbourInformation) Reset()         { *m = NeighbourInformation{} }
func (m *NeighbourInformation) String() string { return proto.CompactTextString(m) }
func (*NeighbourInformation) ProtoMessage()    {}
func (*NeighbourInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{4}
}

func (m *NeighbourInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeighbourInformation.Unmarshal(m, b)
}
func (m *NeighbourInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeighbourInformation.Marshal(b, m, deterministic)
}
func (m *NeighbourInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeighbourInformation.Merge(m, src)
}
func (m *NeighbourInformation) XXX_Size() int {
	return xxx_messageInfo_NeighbourInformation.Size(m)
}
func (m *NeighbourInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_NeighbourInformation.DiscardUnknown(m)
}

var xxx_messageInfo_NeighbourInformation proto.InternalMessageInfo

func (m *NeighbourInformation) GetEcgi() string {
	if m != nil {
		return m.Ecgi
	}
	return ""
}

func (m *NeighbourInformation) GetPci() uint32 {
	if m != nil {
		return m.Pci
	}
	return 0
}

func (m *NeighbourInformation) GetEarFcn() uint32 {
	if m != nil {
		return m.EarFcn
	}
	return 0
}

func (m *NeighbourInformation) GetTac() string {
	if m != nil {
		return m.Tac
	}
	return ""
}

type MbsfnSubframe struct {
	RadioframeAllocationPeriod RadioframeAllocationPeriod `protobuf:"varint,1,opt,name=radioframe_allocation_period,json=radioframeAllocationPeriod,proto3,enum=entities.RadioframeAllocationPeriod" json:"radioframe_allocation_period,omitempty"`
	RadioframeAllocationOffset uint32                     `protobuf:"varint,2,opt,name=radioframe_allocation_offset,json=radioframeAllocationOffset,proto3" json:"radioframe_allocation_offset,omitempty"`
	SubframeAllocation         string                     `protobuf:"bytes,3,opt,name=subframe_allocation,json=subframeAllocation,proto3" json:"subframe_allocation,omitempty"`
	SubframeAllocationType     SubframeAllocationType     `protobuf:"varint,4,opt,name=subframe_allocation_type,json=subframeAllocationType,proto3,enum=entities.SubframeAllocationType" json:"subframe_allocation_type,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                   `json:"-"`
	XXX_unrecognized           []byte                     `json:"-"`
	XXX_sizecache              int32                      `json:"-"`
}

func (m *MbsfnSubframe) Reset()         { *m = MbsfnSubframe{} }
func (m *MbsfnSubframe) String() string { return proto.CompactTextString(m) }
func (*MbsfnSubframe) ProtoMessage()    {}
func (*MbsfnSubframe) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{5}
}

func (m *MbsfnSubframe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MbsfnSubframe.Unmarshal(m, b)
}
func (m *MbsfnSubframe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MbsfnSubframe.Marshal(b, m, deterministic)
}
func (m *MbsfnSubframe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MbsfnSubframe.Merge(m, src)
}
func (m *MbsfnSubframe) XXX_Size() int {
	return xxx_messageInfo_MbsfnSubframe.Size(m)
}
func (m *MbsfnSubframe) XXX_DiscardUnknown() {
	xxx_messageInfo_MbsfnSubframe.DiscardUnknown(m)
}

var xxx_messageInfo_MbsfnSubframe proto.InternalMessageInfo

func (m *MbsfnSubframe) GetRadioframeAllocationPeriod() RadioframeAllocationPeriod {
	if m != nil {
		return m.RadioframeAllocationPeriod
	}
	return RadioframeAllocationPeriod_UNKNOWN_RADIOFRAME_ALLOCATION_PERIOD
}

func (m *MbsfnSubframe) GetRadioframeAllocationOffset() uint32 {
	if m != nil {
		return m.RadioframeAllocationOffset
	}
	return 0
}

func (m *MbsfnSubframe) GetSubframeAllocation() string {
	if m != nil {
		return m.SubframeAllocation
	}
	return ""
}

func (m *MbsfnSubframe) GetSubframeAllocationType() SubframeAllocationType {
	if m != nil {
		return m.SubframeAllocationType
	}
	return SubframeAllocationType_UNKNOWN_SUBFRAME_ALLOCATION_TYPE
}

type PrachConfiguration struct {
	RootSequenceIndex                uint32   `protobuf:"varint,1,opt,name=root_sequence_index,json=rootSequenceIndex,proto3" json:"root_sequence_index,omitempty"`
	ZeroCorrelationZoneConfiguration uint32   `protobuf:"varint,2,opt,name=zero_correlation_zone_configuration,json=zeroCorrelationZoneConfiguration,proto3" json:"zero_correlation_zone_configuration,omitempty"`
	HighSpeedFlag                    bool     `protobuf:"varint,3,opt,name=high_speed_flag,json=highSpeedFlag,proto3" json:"high_speed_flag,omitempty"`
	PrachFrequencyOffset             uint32   `protobuf:"varint,4,opt,name=prach_frequency_offset,json=prachFrequencyOffset,proto3" json:"prach_frequency_offset,omitempty"`
	PrachConfigurationIndex          uint32   `protobuf:"varint,5,opt,name=prach_configuration_index,json=prachConfigurationIndex,proto3" json:"prach_configuration_index,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *PrachConfiguration) Reset()         { *m = PrachConfiguration{} }
func (m *PrachConfiguration) String() string { return proto.CompactTextString(m) }
func (*PrachConfiguration) ProtoMessage()    {}
func (*PrachConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{6}
}

func (m *PrachConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrachConfiguration.Unmarshal(m, b)
}
func (m *PrachConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrachConfiguration.Marshal(b, m, deterministic)
}
func (m *PrachConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrachConfiguration.Merge(m, src)
}
func (m *PrachConfiguration) XXX_Size() int {
	return xxx_messageInfo_PrachConfiguration.Size(m)
}
func (m *PrachConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_PrachConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_PrachConfiguration proto.InternalMessageInfo

func (m *PrachConfiguration) GetRootSequenceIndex() uint32 {
	if m != nil {
		return m.RootSequenceIndex
	}
	return 0
}

func (m *PrachConfiguration) GetZeroCorrelationZoneConfiguration() uint32 {
	if m != nil {
		return m.ZeroCorrelationZoneConfiguration
	}
	return 0
}

func (m *PrachConfiguration) GetHighSpeedFlag() bool {
	if m != nil {
		return m.HighSpeedFlag
	}
	return false
}

func (m *PrachConfiguration) GetPrachFrequencyOffset() uint32 {
	if m != nil {
		return m.PrachFrequencyOffset
	}
	return 0
}

func (m *PrachConfiguration) GetPrachConfigurationIndex() uint32 {
	if m != nil {
		return m.PrachConfigurationIndex
	}
	return 0
}

type TddInfo struct {
	EarFcn                                 uint32                                  `protobuf:"varint,1,opt,name=ear_fcn,json=earFcn,proto3" json:"ear_fcn,omitempty"`
	TransmissionBandwidth                  TransmissionBandwidth                   `protobuf:"varint,2,opt,name=transmission_bandwidth,json=transmissionBandwidth,proto3,enum=entities.TransmissionBandwidth" json:"transmission_bandwidth,omitempty"`
	SubframeAssignment                     SubframeAssignment                      `protobuf:"varint,3,opt,name=subframe_assignment,json=subframeAssignment,proto3,enum=entities.SubframeAssignment" json:"subframe_assignment,omitempty"`
	SpecialSubframeInfo                    *SpecialSubframeInfo                    `protobuf:"bytes,4,opt,name=special_subframe_info,json=specialSubframeInfo,proto3" json:"special_subframe_info,omitempty"`
	AdditionalSpecialSubframeInfo          *AdditionalSpecialSubframeInfo          `protobuf:"bytes,5,opt,name=additional_special_subframe_info,json=additionalSpecialSubframeInfo,proto3" json:"additional_special_subframe_info,omitempty"`
	AdditionalSpecialSubframeExtensionInfo *AdditionalSpecialSubframeExtensionInfo `protobuf:"bytes,6,opt,name=additional_special_subframe_extension_info,json=additionalSpecialSubframeExtensionInfo,proto3" json:"additional_special_subframe_extension_info,omitempty"`
	XXX_NoUnkeyedLiteral                   struct{}                                `json:"-"`
	XXX_unrecognized                       []byte                                  `json:"-"`
	XXX_sizecache                          int32                                   `json:"-"`
}

func (m *TddInfo) Reset()         { *m = TddInfo{} }
func (m *TddInfo) String() string { return proto.CompactTextString(m) }
func (*TddInfo) ProtoMessage()    {}
func (*TddInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{7}
}

func (m *TddInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TddInfo.Unmarshal(m, b)
}
func (m *TddInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TddInfo.Marshal(b, m, deterministic)
}
func (m *TddInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TddInfo.Merge(m, src)
}
func (m *TddInfo) XXX_Size() int {
	return xxx_messageInfo_TddInfo.Size(m)
}
func (m *TddInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TddInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TddInfo proto.InternalMessageInfo

func (m *TddInfo) GetEarFcn() uint32 {
	if m != nil {
		return m.EarFcn
	}
	return 0
}

func (m *TddInfo) GetTransmissionBandwidth() TransmissionBandwidth {
	if m != nil {
		return m.TransmissionBandwidth
	}
	return TransmissionBandwidth_UNKNOWN_TRANSMISSION_BANDWIDTH
}

func (m *TddInfo) GetSubframeAssignment() SubframeAssignment {
	if m != nil {
		return m.SubframeAssignment
	}
	return SubframeAssignment_UNKNOWN_SUBFRAME_ASSIGNMENT
}

func (m *TddInfo) GetSpecialSubframeInfo() *SpecialSubframeInfo {
	if m != nil {
		return m.SpecialSubframeInfo
	}
	return nil
}

func (m *TddInfo) GetAdditionalSpecialSubframeInfo() *AdditionalSpecialSubframeInfo {
	if m != nil {
		return m.AdditionalSpecialSubframeInfo
	}
	return nil
}

func (m *TddInfo) GetAdditionalSpecialSubframeExtensionInfo() *AdditionalSpecialSubframeExtensionInfo {
	if m != nil {
		return m.AdditionalSpecialSubframeExtensionInfo
	}
	return nil
}

type AdditionalSpecialSubframeExtensionInfo struct {
	AdditionalSpecialSubframePatternsExtension AdditionalSpecialSubframePatterns_Extension `protobuf:"varint,1,opt,name=additional_special_subframe_patterns_extension,json=additionalSpecialSubframePatternsExtension,proto3,enum=entities.AdditionalSpecialSubframePatterns_Extension" json:"additional_special_subframe_patterns_extension,omitempty"`
	CyclicPrefixDl                             CyclicPrefix                                `protobuf:"varint,2,opt,name=cyclic_prefix_dl,json=cyclicPrefixDl,proto3,enum=entities.CyclicPrefix" json:"cyclic_prefix_dl,omitempty"`
	CyclicPrefixUl                             CyclicPrefix                                `protobuf:"varint,3,opt,name=cyclic_prefix_ul,json=cyclicPrefixUl,proto3,enum=entities.CyclicPrefix" json:"cyclic_prefix_ul,omitempty"`
	XXX_NoUnkeyedLiteral                       struct{}                                    `json:"-"`
	XXX_unrecognized                           []byte                                      `json:"-"`
	XXX_sizecache                              int32                                       `json:"-"`
}

func (m *AdditionalSpecialSubframeExtensionInfo) Reset() {
	*m = AdditionalSpecialSubframeExtensionInfo{}
}
func (m *AdditionalSpecialSubframeExtensionInfo) String() string { return proto.CompactTextString(m) }
func (*AdditionalSpecialSubframeExtensionInfo) ProtoMessage()    {}
func (*AdditionalSpecialSubframeExtensionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{8}
}

func (m *AdditionalSpecialSubframeExtensionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdditionalSpecialSubframeExtensionInfo.Unmarshal(m, b)
}
func (m *AdditionalSpecialSubframeExtensionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdditionalSpecialSubframeExtensionInfo.Marshal(b, m, deterministic)
}
func (m *AdditionalSpecialSubframeExtensionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalSpecialSubframeExtensionInfo.Merge(m, src)
}
func (m *AdditionalSpecialSubframeExtensionInfo) XXX_Size() int {
	return xxx_messageInfo_AdditionalSpecialSubframeExtensionInfo.Size(m)
}
func (m *AdditionalSpecialSubframeExtensionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalSpecialSubframeExtensionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalSpecialSubframeExtensionInfo proto.InternalMessageInfo

func (m *AdditionalSpecialSubframeExtensionInfo) GetAdditionalSpecialSubframePatternsExtension() AdditionalSpecialSubframePatterns_Extension {
	if m != nil {
		return m.AdditionalSpecialSubframePatternsExtension
	}
	return AdditionalSpecialSubframePatterns_UNKNOWN
}

func (m *AdditionalSpecialSubframeExtensionInfo) GetCyclicPrefixDl() CyclicPrefix {
	if m != nil {
		return m.CyclicPrefixDl
	}
	return CyclicPrefix_UNKNOWN_CYCLIC_PREFIX
}

func (m *AdditionalSpecialSubframeExtensionInfo) GetCyclicPrefixUl() CyclicPrefix {
	if m != nil {
		return m.CyclicPrefixUl
	}
	return CyclicPrefix_UNKNOWN_CYCLIC_PREFIX
}

type AdditionalSpecialSubframeInfo struct {
	AdditionalSpecialSubframePatterns AdditionalSpecialSubframe_Patterns `protobuf:"varint,1,opt,name=additional_special_subframe_patterns,json=additionalSpecialSubframePatterns,proto3,enum=entities.AdditionalSpecialSubframe_Patterns" json:"additional_special_subframe_patterns,omitempty"`
	CyclicPrefixDl                    CyclicPrefix                       `protobuf:"varint,2,opt,name=cyclic_prefix_dl,json=cyclicPrefixDl,proto3,enum=entities.CyclicPrefix" json:"cyclic_prefix_dl,omitempty"`
	CyclicPrefixUl                    CyclicPrefix                       `protobuf:"varint,3,opt,name=cyclic_prefix_ul,json=cyclicPrefixUl,proto3,enum=entities.CyclicPrefix" json:"cyclic_prefix_ul,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}                           `json:"-"`
	XXX_unrecognized                  []byte                             `json:"-"`
	XXX_sizecache                     int32                              `json:"-"`
}

func (m *AdditionalSpecialSubframeInfo) Reset()         { *m = AdditionalSpecialSubframeInfo{} }
func (m *AdditionalSpecialSubframeInfo) String() string { return proto.CompactTextString(m) }
func (*AdditionalSpecialSubframeInfo) ProtoMessage()    {}
func (*AdditionalSpecialSubframeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{9}
}

func (m *AdditionalSpecialSubframeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdditionalSpecialSubframeInfo.Unmarshal(m, b)
}
func (m *AdditionalSpecialSubframeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdditionalSpecialSubframeInfo.Marshal(b, m, deterministic)
}
func (m *AdditionalSpecialSubframeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalSpecialSubframeInfo.Merge(m, src)
}
func (m *AdditionalSpecialSubframeInfo) XXX_Size() int {
	return xxx_messageInfo_AdditionalSpecialSubframeInfo.Size(m)
}
func (m *AdditionalSpecialSubframeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalSpecialSubframeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalSpecialSubframeInfo proto.InternalMessageInfo

func (m *AdditionalSpecialSubframeInfo) GetAdditionalSpecialSubframePatterns() AdditionalSpecialSubframe_Patterns {
	if m != nil {
		return m.AdditionalSpecialSubframePatterns
	}
	return AdditionalSpecialSubframe_UNKNOWN
}

func (m *AdditionalSpecialSubframeInfo) GetCyclicPrefixDl() CyclicPrefix {
	if m != nil {
		return m.CyclicPrefixDl
	}
	return CyclicPrefix_UNKNOWN_CYCLIC_PREFIX
}

func (m *AdditionalSpecialSubframeInfo) GetCyclicPrefixUl() CyclicPrefix {
	if m != nil {
		return m.CyclicPrefixUl
	}
	return CyclicPrefix_UNKNOWN_CYCLIC_PREFIX
}

type FddInfo struct {
	UlearFcn                uint32                `protobuf:"varint,1,opt,name=ulear_fcn,json=ulearFcn,proto3" json:"ulear_fcn,omitempty"`
	DlearFcn                uint32                `protobuf:"varint,2,opt,name=dlear_fcn,json=dlearFcn,proto3" json:"dlear_fcn,omitempty"`
	UlTransmissionBandwidth TransmissionBandwidth `protobuf:"varint,3,opt,name=ul_transmission_bandwidth,json=ulTransmissionBandwidth,proto3,enum=entities.TransmissionBandwidth" json:"ul_transmission_bandwidth,omitempty"`
	DlTransmissionBandwidth TransmissionBandwidth `protobuf:"varint,4,opt,name=dl_transmission_bandwidth,json=dlTransmissionBandwidth,proto3,enum=entities.TransmissionBandwidth" json:"dl_transmission_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}              `json:"-"`
	XXX_unrecognized        []byte                `json:"-"`
	XXX_sizecache           int32                 `json:"-"`
}

func (m *FddInfo) Reset()         { *m = FddInfo{} }
func (m *FddInfo) String() string { return proto.CompactTextString(m) }
func (*FddInfo) ProtoMessage()    {}
func (*FddInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{10}
}

func (m *FddInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FddInfo.Unmarshal(m, b)
}
func (m *FddInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FddInfo.Marshal(b, m, deterministic)
}
func (m *FddInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FddInfo.Merge(m, src)
}
func (m *FddInfo) XXX_Size() int {
	return xxx_messageInfo_FddInfo.Size(m)
}
func (m *FddInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FddInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FddInfo proto.InternalMessageInfo

func (m *FddInfo) GetUlearFcn() uint32 {
	if m != nil {
		return m.UlearFcn
	}
	return 0
}

func (m *FddInfo) GetDlearFcn() uint32 {
	if m != nil {
		return m.DlearFcn
	}
	return 0
}

func (m *FddInfo) GetUlTransmissionBandwidth() TransmissionBandwidth {
	if m != nil {
		return m.UlTransmissionBandwidth
	}
	return TransmissionBandwidth_UNKNOWN_TRANSMISSION_BANDWIDTH
}

func (m *FddInfo) GetDlTransmissionBandwidth() TransmissionBandwidth {
	if m != nil {
		return m.DlTransmissionBandwidth
	}
	return TransmissionBandwidth_UNKNOWN_TRANSMISSION_BANDWIDTH
}

type SpecialSubframeInfo struct {
	SpecialSubframePatterns SpecialSubframe_Patterns `protobuf:"varint,1,opt,name=special_subframe_patterns,json=specialSubframePatterns,proto3,enum=entities.SpecialSubframe_Patterns" json:"special_subframe_patterns,omitempty"`
	CyclicPrefixDl          CyclicPrefix             `protobuf:"varint,2,opt,name=cyclic_prefix_dl,json=cyclicPrefixDl,proto3,enum=entities.CyclicPrefix" json:"cyclic_prefix_dl,omitempty"`
	CyclicPrefixUl          CyclicPrefix             `protobuf:"varint,3,opt,name=cyclic_prefix_ul,json=cyclicPrefixUl,proto3,enum=entities.CyclicPrefix" json:"cyclic_prefix_ul,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                 `json:"-"`
	XXX_unrecognized        []byte                   `json:"-"`
	XXX_sizecache           int32                    `json:"-"`
}

func (m *SpecialSubframeInfo) Reset()         { *m = SpecialSubframeInfo{} }
func (m *SpecialSubframeInfo) String() string { return proto.CompactTextString(m) }
func (*SpecialSubframeInfo) ProtoMessage()    {}
func (*SpecialSubframeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{11}
}

func (m *SpecialSubframeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecialSubframeInfo.Unmarshal(m, b)
}
func (m *SpecialSubframeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecialSubframeInfo.Marshal(b, m, deterministic)
}
func (m *SpecialSubframeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialSubframeInfo.Merge(m, src)
}
func (m *SpecialSubframeInfo) XXX_Size() int {
	return xxx_messageInfo_SpecialSubframeInfo.Size(m)
}
func (m *SpecialSubframeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialSubframeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialSubframeInfo proto.InternalMessageInfo

func (m *SpecialSubframeInfo) GetSpecialSubframePatterns() SpecialSubframe_Patterns {
	if m != nil {
		return m.SpecialSubframePatterns
	}
	return SpecialSubframe_UNKNOWN
}

func (m *SpecialSubframeInfo) GetCyclicPrefixDl() CyclicPrefix {
	if m != nil {
		return m.CyclicPrefixDl
	}
	return CyclicPrefix_UNKNOWN_CYCLIC_PREFIX
}

func (m *SpecialSubframeInfo) GetCyclicPrefixUl() CyclicPrefix {
	if m != nil {
		return m.CyclicPrefixUl
	}
	return CyclicPrefix_UNKNOWN_CYCLIC_PREFIX
}

type SpecialSubframe struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecialSubframe) Reset()         { *m = SpecialSubframe{} }
func (m *SpecialSubframe) String() string { return proto.CompactTextString(m) }
func (*SpecialSubframe) ProtoMessage()    {}
func (*SpecialSubframe) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{12}
}

func (m *SpecialSubframe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecialSubframe.Unmarshal(m, b)
}
func (m *SpecialSubframe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecialSubframe.Marshal(b, m, deterministic)
}
func (m *SpecialSubframe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialSubframe.Merge(m, src)
}
func (m *SpecialSubframe) XXX_Size() int {
	return xxx_messageInfo_SpecialSubframe.Size(m)
}
func (m *SpecialSubframe) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialSubframe.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialSubframe proto.InternalMessageInfo

type AdditionalSpecialSubframe struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionalSpecialSubframe) Reset()         { *m = AdditionalSpecialSubframe{} }
func (m *AdditionalSpecialSubframe) String() string { return proto.CompactTextString(m) }
func (*AdditionalSpecialSubframe) ProtoMessage()    {}
func (*AdditionalSpecialSubframe) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{13}
}

func (m *AdditionalSpecialSubframe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdditionalSpecialSubframe.Unmarshal(m, b)
}
func (m *AdditionalSpecialSubframe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdditionalSpecialSubframe.Marshal(b, m, deterministic)
}
func (m *AdditionalSpecialSubframe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalSpecialSubframe.Merge(m, src)
}
func (m *AdditionalSpecialSubframe) XXX_Size() int {
	return xxx_messageInfo_AdditionalSpecialSubframe.Size(m)
}
func (m *AdditionalSpecialSubframe) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalSpecialSubframe.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalSpecialSubframe proto.InternalMessageInfo

type AdditionalSpecialSubframePatterns struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionalSpecialSubframePatterns) Reset()         { *m = AdditionalSpecialSubframePatterns{} }
func (m *AdditionalSpecialSubframePatterns) String() string { return proto.CompactTextString(m) }
func (*AdditionalSpecialSubframePatterns) ProtoMessage()    {}
func (*AdditionalSpecialSubframePatterns) Descriptor() ([]byte, []int) {
	return fileDescriptor_4640cfb595a9e9c8, []int{14}
}

func (m *AdditionalSpecialSubframePatterns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdditionalSpecialSubframePatterns.Unmarshal(m, b)
}
func (m *AdditionalSpecialSubframePatterns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdditionalSpecialSubframePatterns.Marshal(b, m, deterministic)
}
func (m *AdditionalSpecialSubframePatterns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalSpecialSubframePatterns.Merge(m, src)
}
func (m *AdditionalSpecialSubframePatterns) XXX_Size() int {
	return xxx_messageInfo_AdditionalSpecialSubframePatterns.Size(m)
}
func (m *AdditionalSpecialSubframePatterns) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalSpecialSubframePatterns.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalSpecialSubframePatterns proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("entities.FreqBandIndicatorPriority", FreqBandIndicatorPriority_name, FreqBandIndicatorPriority_value)
	proto.RegisterEnum("entities.BandwidthReducedSI", BandwidthReducedSI_name, BandwidthReducedSI_value)
	proto.RegisterEnum("entities.SubframeAllocationType", SubframeAllocationType_name, SubframeAllocationType_value)
	proto.RegisterEnum("entities.RadioframeAllocationPeriod", RadioframeAllocationPeriod_name, RadioframeAllocationPeriod_value)
	proto.RegisterEnum("entities.NumberOfAntennaPorts", NumberOfAntennaPorts_name, NumberOfAntennaPorts_value)
	proto.RegisterEnum("entities.EnbType", EnbType_name, EnbType_value)
	proto.RegisterEnum("entities.SubframeAssignment", SubframeAssignment_name, SubframeAssignment_value)
	proto.RegisterEnum("entities.CyclicPrefix", CyclicPrefix_name, CyclicPrefix_value)
	proto.RegisterEnum("entities.TransmissionBandwidth", TransmissionBandwidth_name, TransmissionBandwidth_value)
	proto.RegisterEnum("entities.Eutra_Mode", Eutra_Mode_name, Eutra_Mode_value)
	proto.RegisterEnum("entities.SpecialSubframe_Patterns", SpecialSubframe_Patterns_name, SpecialSubframe_Patterns_value)
	proto.RegisterEnum("entities.AdditionalSpecialSubframe_Patterns", AdditionalSpecialSubframe_Patterns_name, AdditionalSpecialSubframe_Patterns_value)
	proto.RegisterEnum("entities.AdditionalSpecialSubframePatterns_Extension", AdditionalSpecialSubframePatterns_Extension_name, AdditionalSpecialSubframePatterns_Extension_value)
	proto.RegisterType((*Enb)(nil), "entities.Enb")
	proto.RegisterType((*ServedCellInfo)(nil), "entities.ServedCellInfo")
	proto.RegisterType((*ChoiceEUTRAMode)(nil), "entities.ChoiceEUTRAMode")
	proto.RegisterType((*Eutra)(nil), "entities.Eutra")
	proto.RegisterType((*NeighbourInformation)(nil), "entities.NeighbourInformation")
	proto.RegisterType((*MbsfnSubframe)(nil), "entities.MbsfnSubframe")
	proto.RegisterType((*PrachConfiguration)(nil), "entities.PrachConfiguration")
	proto.RegisterType((*TddInfo)(nil), "entities.TddInfo")
	proto.RegisterType((*AdditionalSpecialSubframeExtensionInfo)(nil), "entities.AdditionalSpecialSubframeExtensionInfo")
	proto.RegisterType((*AdditionalSpecialSubframeInfo)(nil), "entities.AdditionalSpecialSubframeInfo")
	proto.RegisterType((*FddInfo)(nil), "entities.FddInfo")
	proto.RegisterType((*SpecialSubframeInfo)(nil), "entities.SpecialSubframeInfo")
	proto.RegisterType((*SpecialSubframe)(nil), "entities.SpecialSubframe")
	proto.RegisterType((*AdditionalSpecialSubframe)(nil), "entities.AdditionalSpecialSubframe")
	proto.RegisterType((*AdditionalSpecialSubframePatterns)(nil), "entities.AdditionalSpecialSubframePatterns")
}

func init() { proto.RegisterFile("enb.proto", fileDescriptor_4640cfb595a9e9c8) }

var fileDescriptor_4640cfb595a9e9c8 = []byte{
	// 1869 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4b, 0x73, 0xdb, 0xc8,
	0x11, 0x36, 0x1f, 0xe2, 0xa3, 0x65, 0x51, 0xf0, 0x48, 0x96, 0xa8, 0xb5, 0xbc, 0xe6, 0x52, 0x8e,
	0x57, 0xc5, 0xda, 0x52, 0x24, 0x4a, 0xf2, 0x6e, 0x92, 0x43, 0x16, 0x24, 0x41, 0x0b, 0x15, 0x11,
	0xe0, 0x0e, 0xa8, 0xd5, 0x7a, 0xb7, 0x92, 0x29, 0x10, 0x18, 0x52, 0xa8, 0x80, 0x00, 0x0d, 0x80,
	0x89, 0xb5, 0xa9, 0x54, 0xe5, 0x90, 0x63, 0x4e, 0x39, 0x25, 0x87, 0x5c, 0x72, 0xcf, 0xdf, 0x48,
	0xe5, 0x7f, 0xe4, 0x57, 0xe4, 0x90, 0xaa, 0xd4, 0x0c, 0x1e, 0x04, 0x4d, 0xca, 0xd6, 0x29, 0xb5,
	0x27, 0x35, 0xba, 0xbf, 0x7e, 0x4c, 0x4f, 0xf7, 0x47, 0x40, 0x50, 0xa6, 0xce, 0xf0, 0x68, 0xea,
	0xb9, 0x81, 0x8b, 0x4a, 0xd4, 0x09, 0xac, 0xc0, 0xa2, 0x7e, 0xfd, 0xcf, 0x19, 0xc8, 0x49, 0xce,
	0x10, 0x7d, 0x06, 0x25, 0xea, 0x0c, 0x49, 0x70, 0x3b, 0xa5, 0xd5, 0x4c, 0x2d, 0x73, 0x58, 0x69,
	0x3e, 0x3a, 0x8a, 0x41, 0x47, 0x92, 0x33, 0x1c, 0xdc, 0x4e, 0x29, 0x2e, 0xd2, 0x50, 0x40, 0x3f,
	0x83, 0x87, 0x3e, 0xf5, 0x7e, 0x43, 0x4d, 0x62, 0x50, 0xdb, 0xf6, 0xab, 0xd9, 0x5a, 0xee, 0x70,
	0xbd, 0x59, 0x9d, 0x7b, 0x68, 0xdc, 0xda, 0xa6, 0xb6, 0x2d, 0x3b, 0x23, 0x17, 0xaf, 0xfb, 0xc9,
	0xb3, 0x8f, 0x6a, 0xf0, 0x70, 0x3c, 0x23, 0x63, 0xcf, 0x9d, 0x4d, 0x89, 0x65, 0xfa, 0xd5, 0x5c,
	0x2d, 0x77, 0x58, 0xc6, 0x30, 0x9e, 0xbd, 0x62, 0x2a, 0xd9, 0xf4, 0xeb, 0xff, 0x2e, 0x40, 0x65,
	0x31, 0x02, 0x12, 0x20, 0x37, 0x35, 0x2c, 0x5e, 0xda, 0x06, 0x66, 0x22, 0xda, 0x85, 0x22, 0x4b,
	0x4e, 0x2c, 0xb3, 0x9a, 0xad, 0x65, 0x0e, 0xcb, 0xb8, 0xc0, 0x1e, 0x65, 0x93, 0x41, 0x03, 0xdd,
	0xa8, 0xe6, 0xb8, 0x92, 0x89, 0xe8, 0x53, 0xd8, 0x1c, 0x7a, 0xae, 0x6e, 0x1a, 0xba, 0x1f, 0x90,
	0xa9, 0x3d, 0x71, 0xfc, 0x6a, 0x9e, 0x27, 0xad, 0x24, 0xea, 0x3e, 0xd3, 0x22, 0x09, 0x1e, 0x19,
	0x37, 0xae, 0x65, 0x50, 0x42, 0x67, 0x81, 0xa7, 0x93, 0x89, 0x6b, 0xd2, 0xea, 0x5a, 0x2d, 0x73,
	0xb8, 0xde, 0xdc, 0x9b, 0x1f, 0xae, 0xcd, 0x21, 0xd2, 0xd5, 0x00, 0x8b, 0x3d, 0xd7, 0xa4, 0x78,
	0x33, 0xf4, 0x91, 0x98, 0x0b, 0x53, 0xa0, 0x53, 0x80, 0x94, 0x7f, 0x81, 0xb7, 0x73, 0x3b, 0xd5,
	0x4e, 0x66, 0x3b, 0xe2, 0xae, 0x65, 0x9a, 0x38, 0x5d, 0xc1, 0xae, 0x33, 0x9b, 0x0c, 0xa9, 0x47,
	0xdc, 0x11, 0xd1, 0x9d, 0x80, 0x3a, 0x8e, 0x4e, 0xa6, 0xae, 0x17, 0xf8, 0xd5, 0x22, 0x8f, 0xf0,
	0xf1, 0x3c, 0x82, 0xc2, 0x81, 0xea, 0x48, 0x0c, 0x61, 0x7d, 0x86, 0xc2, 0xdb, 0xce, 0x0a, 0x2d,
	0xea, 0xc1, 0xd6, 0xd4, 0xd3, 0x8d, 0x1b, 0x62, 0xb8, 0xce, 0xc8, 0x1a, 0xcf, 0x3c, 0x3d, 0xb0,
	0x5c, 0xa7, 0x5a, 0xe2, 0x87, 0xda, 0x9f, 0x87, 0xec, 0x33, 0x50, 0x3b, 0x8d, 0xc1, 0x68, 0xba,
	0xa4, 0x43, 0x32, 0x6c, 0x4f, 0x86, 0xfe, 0xc8, 0x21, 0xfe, 0x6c, 0x38, 0xf2, 0xf4, 0x09, 0x25,
	0x96, 0x33, 0x72, 0xfd, 0x6a, 0x99, 0x4f, 0xc0, 0xee, 0x3c, 0x5e, 0x8f, 0xa1, 0xb4, 0x08, 0x84,
	0xd1, 0x24, 0xfd, 0xc8, 0x6e, 0xd4, 0x47, 0x8f, 0xa1, 0x60, 0xf8, 0x63, 0x76, 0x7f, 0xc0, 0xaf,
	0x6a, 0xcd, 0xf0, 0xc7, 0xb2, 0x89, 0x7e, 0x0e, 0xfb, 0x93, 0xe1, 0xc4, 0x27, 0x6c, 0x64, 0xd8,
	0x4d, 0xe8, 0x1e, 0xd5, 0x89, 0x65, 0xc6, 0x81, 0xab, 0xeb, 0xfc, 0xe6, 0xf6, 0x18, 0x46, 0x0b,
	0x21, 0xa2, 0x47, 0x75, 0x39, 0x01, 0xb0, 0xdb, 0x9e, 0xcc, 0xec, 0xc0, 0x1a, 0xea, 0x8e, 0x19,
	0x55, 0xf7, 0xb0, 0x96, 0x3b, 0xdc, 0xc0, 0x95, 0x44, 0x1d, 0x16, 0x60, 0xc2, 0xfe, 0xc8, 0xa3,
	0x6f, 0x48, 0x04, 0x34, 0x2d, 0x43, 0x0f, 0x5c, 0x8f, 0x4c, 0x3d, 0xcb, 0xf5, 0xac, 0xe0, 0xb6,
	0xba, 0xc1, 0xdb, 0x7e, 0x30, 0x3f, 0x53, 0xd7, 0xa3, 0x6f, 0x5a, 0xdc, 0x3d, 0xc2, 0xf6, 0x23,
	0x28, 0xde, 0x1b, 0xdd, 0x65, 0x42, 0x0a, 0x6c, 0xb3, 0x04, 0xbf, 0xb5, 0xcc, 0xe0, 0x86, 0x78,
	0xd4, 0x9c, 0x19, 0xd4, 0x24, 0xbe, 0x55, 0xad, 0xf0, 0xe8, 0xa9, 0x1b, 0x68, 0xc5, 0x28, 0x1c,
	0x82, 0x34, 0x19, 0xa3, 0xe1, 0xbb, 0x3a, 0x0b, 0xbd, 0x82, 0x4d, 0x87, 0x5a, 0xe3, 0x9b, 0xa1,
	0x3b, 0xf3, 0xa2, 0xe3, 0x6d, 0xf2, 0xe6, 0xa7, 0xe7, 0x23, 0x06, 0xb0, 0x83, 0x7a, 0x93, 0xf0,
	0x3a, 0x2b, 0x4e, 0x5a, 0xeb, 0xd7, 0xbf, 0x83, 0xcd, 0x77, 0x26, 0x19, 0x1d, 0x40, 0x6e, 0x64,
	0x9a, 0x7c, 0xcb, 0xd6, 0xd3, 0x04, 0xd0, 0x35, 0x79, 0xcb, 0x30, 0xb3, 0x32, 0x50, 0x60, 0x86,
	0x4b, 0xb7, 0x00, 0x1a, 0xc4, 0xa0, 0xc0, 0x34, 0xeb, 0x47, 0xb0, 0xc6, 0xc7, 0xbc, 0xfe, 0x23,
	0xc8, 0xf3, 0xd0, 0xeb, 0x50, 0xbc, 0x52, 0x7e, 0xa1, 0xa8, 0xd7, 0x8a, 0xf0, 0x00, 0x15, 0x21,
	0xd7, 0xed, 0x74, 0x84, 0x0c, 0x13, 0x06, 0x9d, 0x8e, 0x90, 0xad, 0x8f, 0x61, 0x7b, 0x55, 0xd1,
	0x08, 0x41, 0x9e, 0x1a, 0xe3, 0x70, 0xf1, 0xcb, 0x98, 0xcb, 0x31, 0x17, 0x64, 0x17, 0xb8, 0x80,
	0xea, 0x1e, 0x19, 0x19, 0x0e, 0x5f, 0xfb, 0x0d, 0x5c, 0xa0, 0xba, 0xd7, 0x35, 0x9c, 0x98, 0x0b,
	0xf2, 0x09, 0x17, 0xd4, 0xff, 0x99, 0x85, 0x8d, 0x85, 0xd9, 0x44, 0x23, 0xd8, 0xf7, 0x74, 0xd3,
	0x72, 0xc3, 0x71, 0xd6, 0x6d, 0xdb, 0x35, 0x78, 0x6e, 0x32, 0xa5, 0x9e, 0xe5, 0x9a, 0x11, 0x1d,
	0x3e, 0x9f, 0x1f, 0x14, 0x27, 0x68, 0x31, 0x01, 0xf7, 0x39, 0x16, 0x7f, 0xe4, 0xdd, 0x69, 0x43,
	0x5f, 0xde, 0x95, 0xc7, 0x1d, 0x8d, 0x7c, 0x1a, 0x44, 0xe7, 0x59, 0x19, 0x41, 0xe5, 0x08, 0xf4,
	0x63, 0xd8, 0x4a, 0xd6, 0x6e, 0xee, 0x1f, 0x31, 0x1d, 0x8a, 0x4d, 0x73, 0x37, 0xf4, 0x2d, 0x54,
	0x57, 0x38, 0x84, 0x2c, 0x9f, 0xe7, 0xc7, 0xaa, 0xa5, 0x38, 0x7b, 0xc9, 0x9f, 0x93, 0xfe, 0x8e,
	0xbf, 0x52, 0x5f, 0xff, 0x47, 0x16, 0xd0, 0x32, 0x69, 0xa0, 0x23, 0xd8, 0xf2, 0x5c, 0x37, 0x20,
	0x3e, 0x7d, 0x33, 0xa3, 0x8e, 0xc1, 0xf8, 0xc1, 0xa4, 0x6f, 0x23, 0xe2, 0x7e, 0xc4, 0x4c, 0x5a,
	0x64, 0x91, 0x99, 0x01, 0xf5, 0xe0, 0xe0, 0x7b, 0xea, 0xb9, 0xc4, 0x70, 0x3d, 0x8f, 0xda, 0x61,
	0x7d, 0xdf, 0xbb, 0x0e, 0x7d, 0x87, 0xaf, 0xc2, 0xe6, 0xd4, 0x18, 0xb4, 0x3d, 0x47, 0x7e, 0xeb,
	0x3a, 0x74, 0x31, 0xfd, 0x0b, 0xd8, 0xbc, 0xb1, 0xc6, 0x37, 0xc4, 0x9f, 0x52, 0x6a, 0x92, 0x91,
	0xad, 0x8f, 0x79, 0x7b, 0x4a, 0x78, 0x83, 0xa9, 0x35, 0xa6, 0xed, 0xda, 0xfa, 0x18, 0x9d, 0xc1,
	0x4e, 0x48, 0x8b, 0x6c, 0x71, 0x59, 0x39, 0xb7, 0xf1, 0x35, 0xe4, 0x79, 0xa6, 0x6d, 0x6e, 0xed,
	0xc6, 0xc6, 0xe8, 0x02, 0x7e, 0x0a, 0x7b, 0x2b, 0xc8, 0x34, 0x3a, 0xe2, 0x1a, 0x77, 0xdc, 0x5d,
	0x26, 0x4d, 0x7e, 0xd0, 0xfa, 0xdf, 0xf2, 0x50, 0x8c, 0x56, 0x24, 0x3d, 0xaf, 0x99, 0x85, 0x79,
	0xfd, 0x1a, 0x76, 0x02, 0x4f, 0x77, 0xfc, 0x89, 0xe5, 0xfb, 0x2c, 0x72, 0xb2, 0xff, 0xbc, 0x01,
	0x95, 0xe6, 0xb3, 0xd4, 0xba, 0xa5, 0x70, 0x73, 0xea, 0x78, 0x1c, 0xac, 0x52, 0xb3, 0x5f, 0x81,
	0xf9, 0x20, 0xf8, 0xbe, 0x35, 0x76, 0x26, 0xd4, 0x09, 0x78, 0x6b, 0x16, 0x38, 0x28, 0x99, 0x81,
	0x04, 0x93, 0x9a, 0xab, 0x44, 0x87, 0xbe, 0x82, 0xc7, 0xfe, 0x94, 0x1a, 0x96, 0x6e, 0x2f, 0xfe,
	0x0e, 0xf0, 0xe6, 0xad, 0x37, 0x9f, 0xa6, 0x02, 0x86, 0xb0, 0x34, 0xf3, 0xe3, 0x2d, 0x7f, 0x59,
	0x89, 0xa6, 0x50, 0xd3, 0x4d, 0xd3, 0x62, 0xfd, 0x62, 0x51, 0x57, 0x46, 0x0f, 0x7f, 0x89, 0x3f,
	0x9d, 0x47, 0x17, 0x13, 0x8f, 0x55, 0x79, 0x9e, 0xea, 0xef, 0x33, 0xa3, 0x3f, 0x65, 0xa0, 0xf1,
	0xbe, 0x94, 0xf4, 0x6d, 0x40, 0x1d, 0x3f, 0xbc, 0xdf, 0x91, 0xcb, 0x7f, 0xc6, 0xd7, 0x9b, 0xc7,
	0xf7, 0x48, 0x2e, 0xc5, 0x8e, 0xbc, 0x8a, 0x17, 0xfa, 0xbd, 0x70, 0xf5, 0x7f, 0x65, 0xe1, 0xc5,
	0xfd, 0x42, 0xa2, 0xbf, 0x66, 0xe0, 0xe8, 0x7d, 0x95, 0x4f, 0xf5, 0x20, 0xa0, 0x9e, 0xe3, 0xcf,
	0x8f, 0x10, 0x91, 0xd8, 0xf9, 0x3d, 0xaa, 0xef, 0x47, 0xce, 0x47, 0x49, 0x4e, 0xdc, 0xd0, 0x3f,
	0x04, 0x4e, 0xb0, 0xe8, 0x4b, 0x10, 0x8c, 0x5b, 0xc3, 0xb6, 0x0c, 0x32, 0xf5, 0xe8, 0xc8, 0x7a,
	0x4b, 0x4c, 0x3b, 0x9a, 0xdd, 0x9d, 0xd4, 0x1b, 0x14, 0x47, 0xf4, 0x39, 0x00, 0x57, 0x8c, 0xd4,
	0x53, 0xc7, 0x5e, 0x8e, 0x30, 0xb3, 0xa3, 0x41, 0xbd, 0x57, 0x84, 0x2b, 0xbb, 0xfe, 0xf7, 0x2c,
	0x3c, 0x7d, 0xef, 0x68, 0xa0, 0xdf, 0xc3, 0xf3, 0xfb, 0x34, 0x30, 0x6a, 0xdb, 0x67, 0xf7, 0x68,
	0xdb, 0x51, 0xdc, 0x0a, 0xfc, 0xc9, 0x07, 0xbb, 0xf5, 0x83, 0x68, 0xd2, 0x7f, 0x33, 0x50, 0x8c,
	0x7e, 0xd7, 0xd1, 0x13, 0x28, 0xcf, 0xec, 0x45, 0x46, 0x2a, 0x71, 0x05, 0xe3, 0xa4, 0x27, 0x50,
	0x36, 0x13, 0x63, 0xc8, 0xc3, 0x25, 0x33, 0x36, 0x7e, 0x07, 0x7b, 0x33, 0x9b, 0xdc, 0xc1, 0x59,
	0xb9, 0xfb, 0x71, 0xd6, 0xee, 0xcc, 0x5e, 0x69, 0x60, 0xc1, 0xcd, 0x3b, 0x83, 0xe7, 0xef, 0x19,
	0xdc, 0x5c, 0x1d, 0xbc, 0xfe, 0x9f, 0x0c, 0x6c, 0xad, 0x1a, 0x8d, 0x5f, 0xc1, 0xde, 0x87, 0xe6,
	0xa1, 0x7e, 0x27, 0xbf, 0xcd, 0xa7, 0x60, 0xd7, 0xff, 0x01, 0xdf, 0xfd, 0x1f, 0x33, 0xb0, 0xf9,
	0x4e, 0xe5, 0xf5, 0x37, 0x50, 0x4a, 0x6a, 0x5c, 0x78, 0x59, 0x2b, 0x41, 0x5e, 0xd3, 0xfa, 0xc7,
	0x42, 0x26, 0x92, 0x4e, 0x84, 0x6c, 0x24, 0x35, 0x85, 0x5c, 0x24, 0x9d, 0x0a, 0xf9, 0x48, 0x3a,
	0x13, 0xd6, 0x22, 0xe9, 0x5c, 0x28, 0x44, 0xd2, 0x4b, 0xa1, 0x18, 0x49, 0x9f, 0x0b, 0xa5, 0x48,
	0xfa, 0x42, 0x28, 0xd7, 0xff, 0x92, 0x81, 0xbd, 0x3b, 0x17, 0xaa, 0xfe, 0xbb, 0xff, 0x7b, 0x41,
	0x91, 0xf4, 0x13, 0x01, 0xea, 0x17, 0xf0, 0xc9, 0x07, 0x19, 0xb2, 0x7e, 0x00, 0xe5, 0x39, 0xf1,
	0x2d, 0x94, 0x58, 0x86, 0x35, 0x56, 0xd8, 0xb1, 0x90, 0x69, 0xfc, 0x1a, 0xf6, 0xee, 0xfc, 0x6e,
	0x40, 0x87, 0xf0, 0x3c, 0x72, 0x22, 0x5d, 0x2c, 0x7d, 0x45, 0x5a, 0xa2, 0xd2, 0x21, 0xb2, 0xd2,
	0x91, 0xdb, 0xe2, 0x40, 0xc5, 0xa4, 0x8f, 0x65, 0x15, 0xcb, 0x83, 0xd7, 0xc2, 0x03, 0xb4, 0x05,
	0x9b, 0x8a, 0x3a, 0x20, 0x2d, 0xac, 0x8a, 0x9d, 0xb6, 0xa8, 0x0d, 0x24, 0xf6, 0xfa, 0xbc, 0x09,
	0xeb, 0x69, 0x45, 0xb6, 0x21, 0x01, 0x5a, 0xfe, 0x8c, 0x40, 0x35, 0xd8, 0x8f, 0xb3, 0xb0, 0x04,
	0xd7, 0x72, 0x67, 0x70, 0x41, 0xb0, 0xd4, 0xb9, 0x6a, 0x4b, 0x1d, 0xa2, 0xc9, 0xc2, 0x03, 0xb4,
	0x01, 0x65, 0xad, 0x7d, 0x21, 0x75, 0xae, 0x2e, 0x59, 0xdc, 0xc6, 0x2f, 0x61, 0x67, 0xf5, 0xdb,
	0x20, 0x7a, 0x0e, 0xb5, 0x38, 0x94, 0x76, 0xd5, 0xea, 0x62, 0xb1, 0x27, 0x11, 0xf1, 0xf2, 0x52,
	0x6d, 0x8b, 0x03, 0x59, 0x55, 0xc8, 0xe0, 0x75, 0x5f, 0x0a, 0xc3, 0xa9, 0x8a, 0x44, 0xb8, 0x59,
	0xc8, 0xa0, 0x0a, 0x40, 0x57, 0xbd, 0xc2, 0xd1, 0x73, 0xb6, 0xf1, 0x16, 0x3e, 0xba, 0xfb, 0x1d,
	0x3a, 0xdd, 0x13, 0x2c, 0x76, 0x64, 0x75, 0x29, 0x49, 0x5f, 0xc2, 0xb2, 0xda, 0x11, 0x1e, 0xa0,
	0x02, 0x64, 0x95, 0x13, 0x21, 0xc3, 0xff, 0x36, 0x85, 0x2c, 0xff, 0x7b, 0x26, 0xe4, 0xf8, 0xdf,
	0x2f, 0x84, 0x3c, 0xfb, 0xba, 0x50, 0x4e, 0x5e, 0x0a, 0x6b, 0x5c, 0x38, 0x6d, 0x0a, 0x85, 0xc6,
	0xd7, 0xb0, 0xbd, 0xea, 0xdb, 0x19, 0x1d, 0xc0, 0xb3, 0x38, 0xa7, 0x72, 0xd5, 0x6b, 0x49, 0x98,
	0xa8, 0x5d, 0x22, 0x2a, 0x03, 0x49, 0x51, 0x44, 0xd2, 0x57, 0xf1, 0x40, 0x0b, 0xbf, 0x5a, 0x44,
	0x9e, 0x8f, 0x0b, 0x2c, 0x21, 0x17, 0xce, 0x84, 0x5c, 0x83, 0x42, 0x31, 0xfa, 0x27, 0x09, 0xda,
	0x06, 0x21, 0x0e, 0x25, 0x29, 0xad, 0x54, 0x47, 0x7a, 0x62, 0x1b, 0xab, 0x4c, 0x27, 0x64, 0xd0,
	0x43, 0x28, 0x5d, 0xa8, 0x3d, 0x89, 0x3f, 0x65, 0xd9, 0xdd, 0x6a, 0x17, 0x2a, 0x1e, 0x90, 0x39,
	0x24, 0x87, 0x10, 0x54, 0x2e, 0x55, 0xe5, 0x55, 0x4a, 0x97, 0x6f, 0x04, 0x80, 0x96, 0xdf, 0xd0,
	0xd0, 0x33, 0x78, 0xb2, 0x7c, 0x27, 0x9a, 0x26, 0xbf, 0x52, 0x7a, 0x92, 0x32, 0x08, 0x0b, 0xd7,
	0xc4, 0xe3, 0xb0, 0x70, 0x4d, 0x3c, 0x09, 0x0b, 0xd7, 0x44, 0xb6, 0x2d, 0x5c, 0x38, 0x0d, 0x7b,
	0xa5, 0x89, 0x67, 0x61, 0xaf, 0x34, 0x91, 0xad, 0x0a, 0x17, 0x5e, 0x0a, 0xc5, 0x46, 0x1b, 0x1e,
	0xa6, 0xd9, 0x04, 0xed, 0xc1, 0xe3, 0x38, 0x5f, 0xfb, 0x75, 0xfb, 0x52, 0x6e, 0x93, 0x3e, 0x96,
	0xba, 0xf2, 0x37, 0xc2, 0x03, 0x04, 0x50, 0x50, 0x54, 0xdc, 0x13, 0x2f, 0xc3, 0x33, 0x4a, 0xdf,
	0x0c, 0x24, 0xa5, 0xc3, 0x27, 0xf3, 0x0f, 0x19, 0x78, 0xbc, 0x9a, 0xe5, 0xeb, 0xf0, 0x71, 0x1c,
	0x6e, 0x80, 0x45, 0x45, 0xeb, 0xc9, 0x9a, 0xc6, 0xae, 0x39, 0x19, 0xd5, 0xf0, 0x04, 0xad, 0xeb,
	0x97, 0xe1, 0xc6, 0xb7, 0xae, 0x4f, 0xce, 0xc3, 0x8d, 0x6f, 0x5d, 0x37, 0xcf, 0xc3, 0x8d, 0x6f,
	0x5d, 0x9f, 0x1f, 0x87, 0x1b, 0xdf, 0xba, 0xfe, 0xfc, 0x5c, 0x58, 0x63, 0x0b, 0xd8, 0xba, 0x3e,
	0x39, 0x3e, 0x0e, 0xcf, 0xd1, 0xba, 0x3e, 0x11, 0x8a, 0xc3, 0x02, 0xff, 0xe7, 0xd7, 0xe9, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x10, 0x6b, 0x1a, 0x98, 0x09, 0x13, 0x00, 0x00,
}
